# ENCRYPTED by PY-ENCODE
# Created by B14CK-KN1GH7 (NAFIS-FUAD)
# Facebook : http://facebook.com/nafis.fuad.904
# Github : http://github.com/nfs-tech-bd

import base64
exec(base64.b64decode('I1NPSEFJTChTQVQgU0hBSElOIFlUKShTSEFISS4gQUxBTSkNCiNXaGF0c0FwcCA6IDAxNjE1MTYxMDU2DQojR2l0aHViIDogU09IQUlMMXgxDQpmcm9tIG9zIGltcG9ydCBwYXRoDQppbXBvcnQgb3MsYmFzZTY0LHpsaWIscGlwLHVybGxpYg0KdHJ5Og0KICAgICAgICBpbXBvcnQgb3MscmVxdWVzdHMsanNvbix0aW1lLHJlLHJhbmRvbSxzeXMsdXVpZCxzdHJpbmcsc3VicHJvY2Vzcw0KICAgICAgICBmcm9tIHN0cmluZyBpbXBvcnQgKg0KICAgICAgICBmcm9tIGNvbmN1cnJlbnQuZnV0dXJlcyBpbXBvcnQgVGhyZWFkUG9vbEV4ZWN1dG9yIGFzIHRyZWQNCmV4Y2VwdCBNb2R1bGVOb3RGb3VuZEVycm9yOg0KICAgICAgICBvcy5zeXN0ZW0oZidwaXAgaW5zdGFsbCByZXF1ZXN0cyBmdXR1cmVzPT0yID4gL2Rldi9udWxsJykNCmV4Y2VwdDpwYXNzDQpmYmtzPShmJ2NvbS5mYWNlYm9vay5hZHNtYW5hZ2VyJywnY29tLmZhY2Vib29rLmxpdGUnLCdjb20uZmFjZWJvb2sub3JjYScsJ2NvbS5mYWNlYm9vay5rYXRhbmEnLCdjb20uZmFjZWJvb2subWxpdGUnKQ0KZ3QgPSByYW5kb20uY2hvaWNlKFsnR1QtMTAxNScsJ0dULTEwMjAnLCdHVC0xMDMwJywnR1QtMTAzNScsJ0dULTEwNDAnLCdHVC0xMDQ1JywnR1QtMTA1MCcsJ0dULTEyNDAnLCdHVC0xNDQwJywnR1QtMTQ1MCcsJ0dULTE4MTkwJywnR1QtMTgyNjInLCdHVC0xOTA2MEknLCdHVC0xOTA4MicsJ0dULTE5MDgzJywnR1QtMTkxMDUnLCdHVC0xOTE1MicsJ0dULTE5MTkyJywnR1QtMTkzMDAnLCdHVC0xOTUwNScsJ0dULTIwMDAnLCdHVC0yMDAwMCcsJ0dULTIwMHMnLCdHVC0zMDAwJywnR1QtNDE0WE9QJywnR1QtNjkxOCcsJ0dULTcwMTAnLCdHVC03MDIwJywnR1QtNzAzMCcsJ0dULTcwNDAnLCdHVC03MDUwJywnR1QtNzEwMCcsJ0dULTcxMDUnLCdHVC03MTEwJywnR1QtNzIwNScsJ0dULTcyMTAnLCdHVC03MjQwUicsJ0dULTcyNDUnLCdHVC03MzAzJywnR1QtNzMxMCcsJ0dULTczMjAnLCdHVC03MzI1JywnR1QtNzMyNicsJ0dULTczNDAnLCdHVC03NDA1JywnR1QtNzU1MCAgIDVHVC04MDA1JywnR1QtODAxMCcsJ0dULTgxJywnR1QtODEwJywnR1QtODEwNScsJ0dULTgxMTAnLCdHVC04MjIwUycsJ0dULTg0MTAnLCdHVC05MzAwJywnR1QtOTMyMCcsJ0dULTkzRycsJ0dULUE3MTAwJywnR1QtQTk1MDAnLCdHVC1BTkRST0lEJywnR1QtQjI3MTAnLCdHVC1CNTMzMCcsJ0dULUI1MzMwQicsJ0dULUI1MzMwTCcsJ0dULUI1MzMwWktBSU5VJywnR1QtQjU1MTAnLCdHVC1CNTUxMicsJ0dULUI1NzIyJywnR1QtQjc1MTAnLCdHVC1CNzcyMicsJ0dULUI3ODEwJywnR1QtQjkxNTAnLCdHVC1COTM4OCcsJ0dULUMzMDEwJywnR1QtQzMyNjInLCdHVC1DMzMxMFInLCdHVC1DMzMxMicsJ0dULUMzMzEyUicsJ0dULUMzMzEzVCcsJ0dULUMzMzIyJywnR1QtQzMzMjJpJywnR1QtQzM1MjAnLCdHVC1DMzUyMEknLCdHVC1DMzU5MicsJ0dULUMzNTk1JywnR1QtQzM3ODInLCdHVC1DNjcxMicsJ0dULUUxMjgyVCcsJ0dULUUxNTAwJywnR1QtRTIyMDAnLCdHVC1FMjIwMicsJ0dULUUyMjUwJywnR1QtRTIyNTInLCdHVC1FMjYwMCcsJ0dULUUyNjUyVycsJ0dULUUzMjEwJywnR1QtRTMzMDknLCdHVC1FMzMwOUknLCdHVC1FMzMwOVQnLCdHVC1HNTMwSCcsJ0dULWc5MDBmJywnR1QtRzkzMEYnLCdHVC1IOTUwMCcsJ0dULUk1NTA4JywnR1QtSTU4MDEnLCdHVC1JNjQxMCcsJ0dULUk4MTUwJywnR1QtSTgxNjBPS0xUUEEnLCdHVC1JODE2MFpXTFRUVCcsJ0dULUk4MjU4JywnR1QtSTgyNjJEJywnR1QtSTgyNjgnLCdHVC1JODUwNScsJ0dULUk4NTMwQkFBQlRVJywnR1QtSTg1MzBCQUxDSE8nLCdHVC1JODUzMEJBTFRUVCcsJ0dULUk4NTUwRScsJ0dULWk4NzAwJywnR1QtSTg3NTAnLCdHVC1JOTAwJywnR1QtSTkwMDhMJywnR1QtaTkwNDAnLCdHVC1JOTA4MEUnLCdHVC1JOTA4MkMnLCdHVC1JOTA4MkVXQUlOVScsJ0dULUk5MDgyaScsJ0dULUk5MTAwRycsJ0dULUk5MTAwTEtMQ0hUJywnR1QtSTkxMDBNJywnR1QtSTkxMDBQJywnR1QtSTkxMDBUJywnR1QtSTkxMDVVQU5EQlQnLCdHVC1JOTEyOEUnLCdHVC1JOTEyOEknLCdHVC1JOTEyOFYnLCdHVC1JOTE1OFAnLCdHVC1JOTE1OFYnLCdHVC1JOTE2OEknLCdHVC1JOTE5MkknLCdHVC1JOTE5NUgnLCdHVC1JOTE5NUwnLCdHVC1JOTI1MCcsJ0dULUk5MzAzSScsJ0dULUk5MzA1TicsJ0dULUk5MzA4SScsJ0dULUk5NTA1RycsJ0dULUk5NTA1WCcsJ0dULUk5NTA3VicsJ0dULUk5NjAwJywnR1QtbTE5MCcsJ0dULU01NjUwJywnR1QtbWluaScsJ0dULU41MDAwUycsJ0dULU41MTAwJywnR1QtTjUxMDUnLCdHVC1ONTExMCcsJ0dULU41MTIwJywnR1QtTjcwMDBCJywnR1QtTjcwMDUnLCdHVC1ONzEwMFQnLCdHVC1ONzEwMicsJ0dULU43MTA1JywnR1QtTjcxMDVUJywnR1QtTjcxMDgnLCdHVC1ONzEwOEQnLCdHVC1OODAwMCcsJ0dULU44MDA1JywnR1QtTjgwMTAnLCdHVC1OODAyMCcsJ0dULU45MDAwJywnR1QtTjk1MDUnLCdHVC1QMTAwMENXQVhTQScsJ0dULVAxMDAwTScsJ0dULVAxMDAwVCcsJ0dULVAxMDEwJywnR1QtUDMxMDBCJywnR1QtUDMxMDUnLCdHVC1QMzEwOCcsJ0dULVAzMTEwJywnR1QtUDUxMDAnLCdHVC1QNTIwMCcsJ0dULVA1MjEwWEQxJywnR1QtUDUyMjAnLCdHVC1QNjIwMCcsJ0dULVA2MjAwTCcsJ0dULVA2MjAxJywnR1QtUDYyMTAnLCdHVC1QNjIxMScsJ0dULVA2ODAwJywnR1QtUDcxMDAnLCdHVC1QNzMwMCcsJ0dULVA3MzAwQicsJ0dULVA3MzEwJywnR1QtUDczMjAnLCdHVC1QNzUwMEQnLCdHVC1QNzUwME0nLCdHVC1QNzUwMFInLCdHVC1QNzUwMFYnLCdHVC1QNzUwMScsJ0dULVA3NTExJywnR1QtUzMzMzAnLCdHVC1TMzMzMicsJ0dULVMzMzMzJywnR1QtUzMzNzAnLCdHVC1TMzUxOCcsJ0dULVMzNTcwJywnR1QtUzM2MDBpJywnR1QtUzM2NTAnLCdHVC1TMzY1M1cnLCdHVC1TMzc3MEsnLCdHVC1TMzc3ME0nLCdHVC1TMzgwMFcnLCdHVC1TMzgwMicsJ0dULVMzODUwJywnR1QtUzUyMjAnLCdHVC1TNTIyMFInLCdHVC1TNTIyMicsJ0dULVM1MjMwJywnR1QtUzUyMzBXJywnR1QtUzUyMzNUJywnR1QtczUyMzN3JywnR1QtUzUyNTAnLCdHVC1TNTI1MycsJ0dULXM1MjYwJywnR1QtUzUyODAnLCdHVC1TNTI4MicsJ0dULVM1MjgzQicsJ0dULVM1MjkyJywnR1QtUzUzMDAnLCdHVC1TNTMwMEwnLCdHVC1TNTMwMScsJ0dULVM1MzAxQicsJ0dULVM1MzAxTCcsJ0dULVM1MzAyJywnR1QtUzUzMDJCJywnR1QtUzUzMDMnLCdHVC1TNTMwM0InLCdHVC1TNTMxMCcsJ0dULVM1MzEwQicsJ0dULVM1MzEwQycsJ0dULVM1MzEwRScsJ0dULVM1MzEwRycsJ0dULVM1MzEwSScsJ0dULVM1MzEwTCcsJ0dULVM1MzEwTScsJ0dULVM1MzEwTicsJ0dULVM1MzEyJywnR1QtUzUzMTJCJywnR1QtUzUzMTJDJywnR1QtUzUzMTJMJywnR1QtUzUzMzAnLCdHVC1TNTM2MCcsJ0dULVM1MzYwQicsJ0dULVM1MzYwTCcsJ0dULVM1MzYwVCcsJ0dULVM1MzYzJywnR1QtUzUzNjcnLCdHVC1TNTM2OScsJ0dULVM1MzgwJywnR1QtUzUzODBEJywnR1QtUzU1MDAnLCdHVC1TNTU2MCcsJ0dULVM1NTYwaScsJ0dULVM1NTcwQicsJ0dULVM1NTcwSScsJ0dULVM1NTcwTCcsJ0dULVM1NTc4JywnR1QtUzU2MDAnLCdHVC1TNTYwMycsJ0dULVM1NjEwJywnR1QtUzU2MTBLJywnR1QtUzU2MTEnLCdHVC1TNTYyMCcsJ0dULVM1NjcwJywnR1QtUzU2NzBCJywnR1QtUzU2NzBIS0JaVEEnLCdHVC1TNTY5MCcsJ0dULVM1NjkwUicsJ0dULVM1ODMwJywnR1QtUzU4MzBEJywnR1QtUzU4MzBHJywnR1QtUzU4MzBpJywnR1QtUzU4MzBMJywnR1QtUzU4MzBNJywnR1QtUzU4MzBUJywnR1QtUzU4MzBWJywnR1QtUzU4MzFpJywnR1QtUzU4MzgnLCdHVC1TNTgzOWknLCdHVC1TNjAxMCcsJ0dULVM2MDEwQkJBQlRVJywnR1QtUzYwMTInLCdHVC1TNjAxMkInLCdHVC1TNjEwMicsJ0dULVM2MTAyQicsJ0dULVM2MjkzVCcsJ0dULVM2MzEwQicsJ0dULVM2MzEwWldBTUlEJywnR1QtUzYzMTInLCdHVC1TNjMxM1QnLCdHVC1TNjM1MicsJ0dULVM2NTAwJywnR1QtUzY1MDBEJywnR1QtUzY1MDBMJywnR1QtUzY3OTAnLCdHVC1TNjc5MEwnLCdHVC1TNjc5ME4nLCdHVC1TNjc5MkwnLCdHVC1TNjgwMCcsJ0dULVM2ODAwSEtBWEZBJywnR1QtUzY4MDInLCdHVC1TNjgxMCcsJ0dULVM2ODEwQicsJ0dULVM2ODEwRScsJ0dULVM2ODEwTCcsJ0dULVM2ODEwTScsJ0dULVM2ODEwTUJBU0VSJywnR1QtUzY4MTBQJywnR1QtUzY4MTInLCdHVC1TNjgxMkInLCdHVC1TNjgxMkMnLCdHVC1TNjgxMmknLCdHVC1TNjgxOCcsJ0dULVM2ODE4VicsJ0dULVM3MjMwRScsJ0dULVM3MjMzRScsJ0dULVM3MjUwRCcsJ0dULVM3MjYyJywnR1QtUzcyNzAnLCdHVC1TNzI3MEwnLCdHVC1TNzI3MicsJ0dULVM3MjcyQycsJ0dULVM3MjczVCcsJ0dULVM3Mjc4JywnR1QtUzcyNzhVJywnR1QtUzczOTAnLCdHVC1TNzM5MEcnLCdHVC1TNzM5MEwnLCdHVC1TNzM5MicsJ0dULVM3MzkyTCcsJ0dULVM3NTAwJywnR1QtUzc1MDBBQkFCVFUnLCdHVC1TNzUwMEFCQURCVCcsJ0dULVM3NTAwQUJUVExQJywnR1QtUzc1MDBDV0FEQlQnLCdHVC1TNzUwMEwnLCdHVC1TNzUwMFQnLCdHVC1TNzU2MCcsJ0dULVM3NTYwTScsJ0dULVM3NTYyJywnR1QtUzc1NjJDJywnR1QtUzc1NjJpJywnR1QtUzc1NjJMJywnR1QtUzc1NjYnLCdHVC1TNzU2OCcsJ0dULVM3NTY4SScsJ0dULVM3NTcyJywnR1QtUzc1ODBFJywnR1QtUzc1ODNUJywnR1QtUzc1OFgnLCdHVC1TNzU5MicsJ0dULVM3NzEwJywnR1QtUzc3MTBMJywnR1QtUzc4OTgnLCdHVC1TNzg5OEknLCdHVC1TODUwMCcsJ0dULVM4NTMwJywnR1QtUzg2MDAnLCdHVC1TVEI5MTknLCdHVC1UMTQwJywnR1QtVDE1MCcsJ0dULVY4YScsJ0dULVY4aScsJ0dULVZDODE4JywnR1QtVk05MTlTJywnR1QtVzEzMScsJ0dULVcxNTMnLCdHVC1YODMxJywnR1QtWDg1MycsJ0dULVg4NzAnLCdHVC1YODkwJywnR1QtWTg3NTAnXSkNCnh4eHh4PShmIkdULTEwMTUiLCJHVC0xMDIwIiwiR1QtMTAzMCIsIkdULTEwMzUiLCJHVC0xMDQwIiwiR1QtMTA0NSIsIkdULTEwNTAiLCJHVC0xMjQwIiwiR1QtMTQ0MCIsIkdULTE0NTAiLCJHVC0xODE5MCIsIkdULTE4MjYyIiwiR1QtMTkwNjBJIiwiR1QtMTkwODIiLCJHVC0xOTA4MyIsIkdULTE5MTA1IiwiR1QtMTkxNTIiLCJHVC0xOTE5MiIsIkdULTE5MzAwIiwiR1QtMTk1MDUiLCJHVC0yMDAwIiwiR1QtMjAwMDAiLCJHVC0yMDBzIiwiR1QtMzAwMCIsIkdULTQxNFhPUCIsIkdULTY5MTgiLCJHVC03MDEwIiwiR1QtNzAyMCIsIkdULTcwMzAiLCJHVC03MDQwIiwiR1QtNzA1MCIsIkdULTcxMDAiLCJHVC03MTA1IiwiR1QtNzExMCIsIkdULTcyMDUiLCJHVC03MjEwIiwiR1QtNzI0MFIiLCJHVC03MjQ1IiwiR1QtNzMwMyIsIkdULTczMTAiLCJHVC03MzIwIiwiR1QtNzMyNSIsIkdULTczMjYiLCJHVC03MzQwIiwiR1QtNzQwNSIsIkdULTc1NTAgNUdULTgwMDUiLCJHVC04MDEwIiwiR1QtODEiLCJHVC04MTAiLCJHVC04MTA1IiwiR1QtODExMCIsIkdULTgyMjBTIiwiR1QtODQxMCIsIkdULTkzMDAiLCJHVC05MzIwIiwiR1QtOTNHIiwiR1QtQTcxMDAiLCJHVC1BOTUwMCIsIkdULUFORFJPSUQiLCJHVC1CMjcxMCIsIkdULUI1MzMwIiwiR1QtQjUzMzBCIiwiR1QtQjUzMzBMIiwiR1QtQjUzMzBaS0FJTlUiLCJHVC1CNTUxMCIsIkdULUI1NTEyIiwiR1QtQjU3MjIiLCJHVC1CNzUxMCIsIkdULUI3NzIyIiwiR1QtQjc4MTAiLCJHVC1COTE1MCIsIkdULUI5Mzg4IiwiR1QtQzMwMTAiLCJHVC1DMzI2MiIsIkdULUMzMzEwUiIsIkdULUMzMzEyIiwiR1QtQzMzMTJSIiwiR1QtQzMzMTNUIiwiR1QtQzMzMjIiLCJHVC1DMzMyMmkiLCJHVC1DMzUyMCIsIkdULUMzNTIwSSIsIkdULUMzNTkyIiwiR1QtQzM1OTUiLCJHVC1DMzc4MiIsIkdULUM2NzEyIiwiR1QtRTEyODJUIiwiR1QtRTE1MDAiLCJHVC1FMjIwMCIsIkdULUUyMjAyIiwiR1QtRTIyNTAiLCJHVC1FMjI1MiIsIkdULUUyNjAwIiwiR1QtRTI2NTJXIiwiR1QtRTMyMTAiLCJHVC1FMzMwOSIsIkdULUUzMzA5SSIsIkdULUUzMzA5VCIsIkdULUc1MzBIIiwiR1QtRzkzMEYiLCJHVC1IOTUwMCIsIkdULUk1NTA4IiwiR1QtSTU4MDEiLCJHVC1JNjQxMCIsIkdULUk4MTUwIiwiR1QtSTgxNjBPS0xUUEEiLCJHVC1JODE2MFpXTFRUVCIsIkdULUk4MjU4IiwiR1QtSTgyNjJEIiwiR1QtSTgyNjgiIkdULUk4NTA1IiwiR1QtSTg1MzBCQUFCVFUiLCJHVC1JODUzMEJBTENITyIsIkdULUk4NTMwQkFMVFRUIiwiR1QtSTg1NTBFIiwiR1QtSTg3NTAiLCJHVC1JOTAwIiwiR1QtSTkwMDhMIiwiR1QtSTkwODBFIiwiR1QtSTkwODJDIiwiR1QtSTkwODJFV0FJTlUiLCJHVC1JOTA4MmkiLCJHVC1JOTEwMEciLCJHVC1JOTEwMExLTENIVCIsIkdULUk5MTAwTSIsIkdULUk5MTAwUCIsIkdULUk5MTAwVCIsIkdULUk5MTA1VUFOREJUIiwiR1QtSTkxMjhFIiwiR1QtSTkxMjhJIiwiR1QtSTkxMjhWIiwiR1QtSTkxNThQIiwiR1QtSTkxNThWIiwiR1QtSTkxNjhJIiwiR1QtSTkxOTAiLCJHVC1JOTE5MiIsIkdULUk5MTkySSIsIkdULUk5MTk1SCIsIkdULUk5MTk1TCIsIkdULUk5MjUwIiwiR1QtSTkzMDAiLCJHVC1JOTMwMEkiLCJHVC1JOTMwMUkiLCJHVC1JOTMwM0kiLCJHVC1JOTMwNU4iLCJHVC1JOTMwOEkiLCJHVC1JOTUwMCIsIkdULUk5NTA1RyIsIkdULUk5NTA1WCIsIkdULUk5NTA3ViIsIkdULUk5NjAwIiwiR1QtTTU2NTAiLCJHVC1ONTAwMFMiLCJHVC1ONTEwMCIsIkdULU41MTA1IiwiR1QtTjUxMTAiLCJHVC1ONTEyMCIsIkdULU43MDAwQiIsIkdULU43MDA1IiwiR1QtTjcxMDAiLCJHVC1ONzEwMFQiLCJHVC1ONzEwMiIsIkdULU43MTA1IiwiR1QtTjcxMDVUIiwiR1QtTjcxMDgiLCJHVC1ONzEwOEQiLCJHVC1OODAwMCIsIkdULU44MDA1IiwiR1QtTjgwMTAiLCJHVC1OODAyMCIsIkdULU45MDAwIiwiR1QtTjk1MDUiLCJHVC1QMTAwMENXQVhTQSIsIkdULVAxMDAwTSIsIkdULVAxMDAwVCIsIkdULVAxMDEwIiwiR1QtUDMxMDBCIiwiR1QtUDMxMDUiLCJHVC1QMzEwOCIsIkdULVAzMTEwIiwiR1QtUDUxMDAiLCJHVC1QNTExMCIsIkdULVA1MjAwIiwiR1QtUDUyMTAiLCJHVC1QNTIxMFhEMSIsIkdULVA1MjIwIiwiR1QtUDYyMDAiLCJHVC1QNjIwMEwiLCJHVC1QNjIwMSIsIkdULVA2MjEwIiwiR1QtUDYyMTEiLCJHVC1QNjgwMCIsIkdULVA3MTAwIiwiR1QtUDczMDAiLCJHVC1QNzMwMEIiLCJHVC1QNzMxMCIsIkdULVA3MzIwIiwiR1QtUDc1MDBEIiwiR1QtUDc1MDBNIiwiU0FNU1VORyIsIkxNWTQiLCJMTVk0N1YiLCJNTUIyOUsiLCJNTUIyOU0iLCJMUlgyMkMiLCJMUlgyMkciLCJOTUYyIiwiTk1GMjZYIiwiTk1GMjZYOyIsIk5SRDkwTSIsIk5SRDkwTTsiLCJTUEgtTDcyMCIsIklNTDc0SyIsIklNTTc2RCIsIkpEUTM5IiwiSlNTMTVKIiwiSlpPNTRLIiwiS09UNCIsIktPVDQ5SCIsIktPVDRTTS1UMzEwIiwiS1RVODRQIiwiU00tQTUwMEYiLCJTTS1BNTAwRlUiLCJTTS1BNTAwSCIsIlNNLUc1MzJGIiwiU00tRzkwMEYiLCJTTS1HOTIwRiIsIlNNLUc5MzBGIiwiU00tRzkzNSIsIlNNLUc5NTBGIiwiU00tSjMyMEYiLCJTTS1KMzIwRk4iLCJTTS1KMzIwSCIsIlNNLUozMjBNIiwiU00tSjUxMEZOIiwiU00tSjcwMUYiLCJTTS1OOTIwUyIsIlNNLVQxMTEiLCJTTS1UMjMwIiwiU00tVDIzMSIsIlNNLVQyMzUiLCJTTS1UMjgwIiwiU00tVDMxMSIsIlNNLVQzMTUiLCJTTS1UNTI1IiwiU00tVDUzMSIsIlNNLVQ1MzUiLCJTTS1UNTU1IiwiU00tVDU2MSIsIlNNLVQ3MDUiLCJTTS1UODA1IiwiU00tVDgyMCIpDQp0YW49KCdodHRwcycpDQppeWE9KCdnaXRodWInKQ0KYW5pPSgnRmFyaXlhJykNCmxvdmU9KCdtYmFzaWMnKQ0KdWdlbj1bXQ0KdWdlbj1bXQ0KdXNlcmFnZW50PVtdDQpmb3IgeGQgaW4gcmFuZ2UoMTAwMDApOg0KICAgICAgICBhYT0nTW96aWxsYS81LjAgKExpbnV4OyBVOyBBbmRyb2lkJw0KICAgICAgICBiPXJhbmRvbS5jaG9pY2UoWyc2JywnNycsJzgnLCc5JywnMTAnLCcxMScsJzEyJywnMTMnXSkNCiAgICAgICAgYz1mJyBUTC10bDsge3N0cihndCl9Jw0KICAgICAgICBnPSdBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvJw0KICAgICAgICBoPXJhbmRvbS5yYW5kcmFuZ2UoNzMsMTAwKQ0KICAgICAgICBpPScwJw0KICAgICAgICBqPXJhbmRvbS5yYW5kcmFuZ2UoNDIwMCw0OTAwKQ0KICAgICAgICBrPXJhbmRvbS5yYW5kcmFuZ2UoNDAsMTUwKQ0KICAgICAgICBsPSdNb2JpbGUgU2FmYXJpLzUzNy4zNicNCiAgICAgICAgdWFrdTI9Zid7YWF9IHtifTsge2N9KSB7Z317aH0ue2l9LntqfS57a30ge2x9Jw0KICAgICAgICB1Z2VuLmFwcGVuZCh1YWt1MikNCmZvciBhZ2VudCBpbiByYW5nZSgxMDAwMCk6DQogICAgICAgIGFhPSdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgNi4wLjE7Jw0KICAgICAgICBiPXJhbmRvbS5jaG9pY2UoWyc2JywnNycsJzgnLCc5JywnMTAnLCcxMScsJzEyJ10pDQogICAgICAgIGM9J2VuLXVzOyAxMDsgVC1Nb2JpbGUgbXlUb3VjaCAzRyBTbGlkZSBCdWlsZC8nDQogICAgICAgIGQ9cmFuZG9tLmNob2ljZShbJ0EnLCdCJywgJ0MnLCAnRCcsICdFJywgJ0YnLCAnRycsICdIJywgJ0knLCAnSicsICdLJywgJ0wnLCAnTScsICdOJywgJ08nLCAnUCcsICdRJywgJ1InLCAnUycsICdUJywgJ1UnLCAnVicsICdXJywgJ1gnLCAnWScsICdaJ10pDQogICAgICAgIGU9cmFuZG9tLnJhbmRyYW5nZSgxLCA5OTkpDQogICAgICAgIGY9cmFuZG9tLmNob2ljZShbJ0EnLCdCJywgJ0MnLCAnRCcsICdFJywgJ0YnLCAnRycsICdIJywgJ0knLCAnSicsICdLJywgJ0wnLCAnTScsICdOJywgJ08nLCAnUCcsICdRJywgJ1InLCAnUycsICdUJywgJ1UnLCAnVicsICdXJywgJ1gnLCAnWScsICdaJ10pDQogICAgICAgIGc9J0FwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS84OS4wLjQzODkuOTknDQogICAgICAgIGg9cmFuZG9tLnJhbmRyYW5nZSg3MywxMDApDQogICAgICAgIGk9JzAnDQogICAgICAgIGo9cmFuZG9tLnJhbmRyYW5nZSg0MjAwLDQ5MDApDQogICAgICAgIGs9cmFuZG9tLnJhbmRyYW5nZSg0MCwxNTApDQogICAgICAgIGw9J01vYmlsZSBTYWZhcmkvNTMzLjEnDQogICAgICAgIGZ1bGxhZ250PShmJ3thYX0ge2J9OyB7Y317ZH17ZX17Zn0pIHtnfXtofS57aX0ue2p9LntrfSB7bH0nKQ0KICAgICAgICB1Z2VuLmFwcGVuZChmdWxsYWdudCkNCmZvciB4IGluIHJhbmdlKDEwMDAwKToNCglhYT0nTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCknDQoJYj1yYW5kb20uY2hvaWNlKFsnNCcsJzUnLCc2JywnNycsJzgnLCc5JywnMTAnLCcxMScsJzEyJ10pDQoJYz0nQVNVU19JMDA2RCBCdWlsZC9SS1ExLjIwMTAyMi4wMDInDQoJZD1yYW5kb20uY2hvaWNlKFsnQScsJ0InLCAnQycsICdEJywgJ0UnLCAnRicsICdHJywgJ0gnLCAnSScsICdKJywgJ0snLCAnTCcsICdNJywgJ04nLCAnTycsICdQJywgJ1EnLCAnUicsICdTJywgJ1QnLCAnVScsICdWJywgJ1cnLCAnWCcsICdZJywgJ1onXSkNCgllPXJhbmRvbS5yYW5kcmFuZ2UoMSwgOTk5KQ0KCWY9cmFuZG9tLmNob2ljZShbJ0EnLCdCJywgJ0MnLCAnRCcsICdFJywgJ0YnLCAnRycsICdIJywgJ0knLCAnSicsICdLJywgJ0wnLCAnTScsICdOJywgJ08nLCAnUCcsICdRJywgJ1InLCAnUycsICdUJywgJ1UnLCAnVicsICdXJywgJ1gnLCAnWScsICdaJ10pDQoJZz0nQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgc2VwZXJ0aSBHZWNrbykgQ2hyb21lLzU1LjAuMjg4My44NyBTYWZhcmkvNTM3LjM2IFNsZWlwbmlyLzYuMi4zJw0KCWg9cmFuZG9tLnJhbmRyYW5nZSg3MywxMDApDQoJaT0nMCcNCglqPXJhbmRvbS5yYW5kcmFuZ2UoNDIwMCw0OTAwKQ0KCWs9cmFuZG9tLnJhbmRyYW5nZSg0MCwxNTApDQoJbD0nTW9iaWxlIFNhZmFyaS81MzcuMzYgU2xlaXBuaXIvMy41LjI4Jw0KCXVha3VhPWYne2FhfSB7Yn07IHtjfXtkfXtlfXtmfSkge2d9e2h9LntpfS57an0ue2t9IHtsfScNCgl1c2VyYWdlbnQuYXBwZW5kKHVha3VhKQ0KDQpkZWYgbWVudV9hcGlrZXkoKToNCiAgdXVpZCA9IHN0cihvcy5nZXRldWlkKCkpICsgc3RyKG9zLmdldGxvZ2luKCkpDQogIGlkID0gIuKGkiIuam9pbih1dWlkKQ0KICBzZXJ2ZXIgPSByZXF1ZXN0cy5nZXQoZid7dGFufTovL3tpeWF9LmNvbS97YW5pfTEyMi92aXAvYmxvYi9tYWluL2EudHh0JykudGV4dA0KICANCiANCg0KICBvcy5zeXN0ZW0oZiIgY2xlYXIiKSAgICAgICAgICAgICAgICAgICAgICAgICAgDQogIHByaW50KGYiIiJceDFiWzE7OTdtDQpZPSdceDFiWzE7OTNt4paI4paI4paI4paI4paI4paI4pWXIOKWiOKWiOKWiOKWiOKWiOKWiOKVlyDilojilojilZcgIOKWiOKWiOKVlyDilojilojilojilojilojilZcg4paI4paI4pWX4paI4paI4pWXICAgICANCkc9J1x4MWJbMTs5Mm3ilojilojilZTilZDilZDilZDilZDilZ3ilojilojilZTilZDilZDilZDilojilojilZfilojilojilZEgIOKWiOKWiOKVkeKWiOKWiOKVlOKVkOKVkOKWiOKWiOKVl+KWiOKWiOKVkeKWiOKWiOKVkSAgICAgDQpHPSdceDFiWzE7OTJt4paI4paI4paI4paI4paI4paI4paI4pWX4paI4paI4pWRICAg4paI4paI4pWR4paI4paI4paI4paI4paI4paI4paI4pWR4paI4paI4paI4paI4paI4paI4paI4pWR4paI4paI4pWR4paI4paI4pWRICAgICANCkc9J1x4MWJbMTs5Mm3ilZrilZDilZDilZDilZDilojilojilZHilojilojilZEgICDilojilojilZHilojilojilZTilZDilZDilojilojilZHilojilojilZTilZDilZDilojilojilZHilojilojilZHilojilojilZEgICAgIA0KRz0nXHgxYlsxOzkybeKWiOKWiOKWiOKWiOKWiOKWiOKWiOKVkeKVmuKWiOKWiOKWiOKWiOKWiOKWiOKVlOKVneKWiOKWiOKVkSAg4paI4paI4pWR4paI4paI4pWRICDilojilojilZHilojilojilZHilojilojilojilojilojilojilojilZcNClk9J1x4MWJbMTs5M23ilZrilZDilZDilZDilZDilZDilZDilZ0g4pWa4pWQ4pWQ4pWQ4pWQ4pWQ4pWdIOKVmuKVkOKVnSAg4pWa4pWQ4pWd4pWa4pWQ4pWdICDilZrilZDilZ3ilZrilZDilZ3ilZrilZDilZDilZDilZDilZDilZDilZ0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCuKUjOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUkA0K4pSU4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSYDQrilIIgW+Kck10gQVVUSE9SICAgOiBTT0hBSUwgTUFMSUsgICAgICAgICAgICANCuKUgiBb4pyTXSBHSVRIVUIgICA6IFNPSEFJTC1YRCAgICAgICAgICAgICAgICANCuKUgiBb4pyTXSBXSEFUU0FQUCA6IDk2NjU3MTI0NjU0MSAgICAgIA0K4pSCIFvinJNdIFZFUlNJT04gIDogMC4zICAgICAgICAgICAgICAgICAgICANCuKUgiBb4pyTXSBQT1dFUiBCWSA6IFwwMzNbMTszMm1QUk8gUFJPTk9ZIFwwMzNbMTszN20gICAgICAgIA0K4pSM4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSQICAgIA0K4pSU4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSYIiIiKSAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgcHJpbnQoZiJcdCBcMDMzWzE7MzJtICBGSVJTVCBHRVQgQVBQUk9WRUxcMDMzWzE7MzdtICIpDQogIHByaW50KGYiIikNCiAgcHJpbnQoZiIgXDAzM1sxOzMybSAgVEhJUyBUT09MUyBJUyBQQUlEIFNPIFlPVSBORUVEIEdFVCBBUFBST1ZFRCBGSVJTVFwwMzNbMTszN21cbiIpDQogIHByaW50KGYiIikNCiAgcHJpbnQoZiJceDFiWzE7OTJtICAgY29udHJhY3QgQWRtaW4gdG8gQnV5IHRoaXMgVG9vbHMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiKTt0aW1lLnNsZWVwICgwLjEpIA0KICBwcmludChmIiIpDQogIHByaW50KGYiXDAzM1sxOzMyICAgICBZT1VSICBLRVkgOiAiK2lkKQ0KICBwcmludChmIiIpDQogIHByaW50KGYiXDAzM1sxOzMxbSAgIENPUFkgWU9VUiBLRVkgQU5EIFNFTkQgVE8gQURNSU4gICIpO3RpbWUuc2xlZXAoMC4xKQ0KICBwcmludChmIiIpDQogIHByaW50KGYiICBGb2xsb3cgQWRtaW4gRmFjZWJvb2sgSUQsLCwsLCwsLCwsLCwsLCwsLCAgICAiKTt0aW1lLnNsZWVwKDEpDQogIG9zLnN5c3RlbShmJ3hkZy1vcGVuIHt0YW59Oi8vd3d3LmZhY2Vib29rLmNvbS9zYXQuc2hhaGlueXQnKQ0KICBwcmludChmIiIpO3RpbWUuc2xlZXAoMikNCiAgcHJpbnQoZiJceDFiWzA7MzRtICBDSEVDS0lORyBZT1VSIEFQUk9WQUwuLi4uLi4uLi4uLi4uICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIik7dGltZS5zbGVlcCAoMC41KQ0KICB0cnk6DQogICAgaHR0cENhaHQgPSByZXF1ZXN0cy5nZXQoZiJ7dGFufTovL3tpeWF9LmNvbS97YW5pfTEyMi92aXAvYmxvYi9tYWluL2EudHh0IikudGV4dA0KICAgIGlmIGlkIGluIGh0dHBDYWh0Og0KICAgICAgcHJpbnQoZiJcMDMzWzE7OTJtICAgWU9VUiBLRVkgQVBST1ZFRCAaICIpO3RpbWUuc2xlZXAoMikNCiAgICAgIG1zZyA9IHN0cihvcy5nZXRldWlkKCkpDQogICAgICB0aW1lLnNsZWVwKDAuNSkNCiAgICAgIHBhc3MNCiAgICBlbHNlOg0KICAgICAgDQogICAgICBwcmludChmIlx4MWJbMTs5Mm0gICAgU29ycnkgQnJvIFlvdXIgS2V5IG5vdCBBcHJvdmVkGiAiKQ0KICAgICAgcHJpbnQoZiIgICAgU2VuZCBwYXltZW50IHRvIEFkbWluIGFuZCBnZXQgYXByb3ZhbCIpOyB0aW1lLnNsZWVwKDIpDQogICAgICBvcy5zeXN0ZW0oZid4ZGctb3BlbiB7dGFufTovL3dhLm1lLys4ODAxNjE1MTYxMDU2P3RleHQ9JytpZCkNCiAgICAgIHRpbWUuc2xlZXAoMikNCiAgICAgIHN5cy5leGl0KCkNCiAgZXhjZXB0Og0KICAgIHN5cy5leGl0KCkNCiAgICBpZiBuYW1lID09ICdfX21haW5fXyc6DQogICAgCXByaW50KGxvZ28pDQogICAgCW1lbnVfYXBpa2V5KCkNCiNtZW51X2FwaWtleSgpDQpsb2dvPShmIiIiXHgxYlsxOzk3bQ0KWT0nXHgxYlsxOzkzbeKWiOKWiOKWiOKWiOKWiOKWiOKWiOKVlyDilojilojilojilojilojilojilZcg4paI4paI4pWXICDilojilojilZcg4paI4paI4paI4paI4paI4pWXIOKWiOKWiOKVl+KWiOKWiOKVlyAgICAgDQpHPSdceDFiWzE7OTJt4paI4paI4pWU4pWQ4pWQ4pWQ4pWQ4pWd4paI4paI4pWU4pWQ4pWQ4pWQ4paI4paI4pWX4paI4paI4pWRICDilojilojilZHilojilojilZTilZDilZDilojilojilZfilojilojilZHilojilojilZEgICAgIA0KRz0nXHgxYlsxOzkybeKWiOKWiOKWiOKWiOKWiOKWiOKWiOKVl+KWiOKWiOKVkSAgIOKWiOKWiOKVkeKWiOKWiOKWiOKWiOKWiOKWiOKWiOKVkeKWiOKWiOKWiOKWiOKWiOKWiOKWiOKVkeKWiOKWiOKVkeKWiOKWiOKVkSAgICAgDQpHPSdceDFiWzE7OTJt4pWa4pWQ4pWQ4pWQ4pWQ4paI4paI4pWR4paI4paI4pWRICAg4paI4paI4pWR4paI4paI4pWU4pWQ4pWQ4paI4paI4pWR4paI4paI4pWU4pWQ4pWQ4paI4paI4pWR4paI4paI4pWR4paI4paI4pWRICAgICANCkc9J1x4MWJbMTs5Mm3ilojilojilojilojilojilojilojilZHilZrilojilojilojilojilojilojilZTilZ3ilojilojilZEgIOKWiOKWiOKVkeKWiOKWiOKVkSAg4paI4paI4pWR4paI4paI4pWR4paI4paI4paI4paI4paI4paI4paI4pWXDQpZPSdceDFiWzE7OTNt4pWa4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWdIOKVmuKVkOKVkOKVkOKVkOKVkOKVnSDilZrilZDilZ0gIOKVmuKVkOKVneKVmuKVkOKVnSAg4pWa4pWQ4pWd4pWa4pWQ4pWd4pWa4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWdICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCuKUjOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUkA0K4pSU4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSYDQrilIIgW+Kck10gQVVUSE9SICAgOiBTT0hBSUwgTUFMSUsgICAgICAgICAgIA0K4pSCIFvinJNdIEdJVEhVQiAgIDogU09IQUlMLVhEICAgICAgICAgICAgICAgDQrilIIgW+Kck10gV0hBVFNBUFAgOiArOTY2NTcxMjQ2NTQxICAgICAgICANCuKUgiBb4pyTXSBWRVJTSU9OICA6IDAuMyAgICAgICAgICAgICAgICAgICAgDQrilIIgW+Kck10gUE9XRVIgQlkgOiBcMDMzWzE7MzJtUFJPIFBST05PWSBcMDMzWzE7MzdtIA0K4pSM4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSQDQrilJTilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilJgiIiIpICAgICANCnRyeToNCiAgICBrZXkxPW9wZW4oIi9zdG9yYWdlL2VtdWxhdGVkLzAvYW5kcm9pZDgudHh0IiwncicpLnJlYWQoKQ0KZXhjZXB0IElPRXJyb3I6DQogICAga29rPW9wZW4oIi9zdG9yYWdlL2VtdWxhdGVkLzAvYW5kcm9pZDgudHh0IiwndycpDQogICAgbXlpZD11dWlkLnV1aWQ0KCkuaGV4WzoxMl0NCiAgICBmPSJTT0hBSUwtQkhBaSINCiAgICBrZXk9bXlpZCtmDQogICAga29rLndyaXRlKGtleSkNCiAgICBrb2suY2xvc2UoKQ0KICAgIHByaW50KGtleSkNCg0KYT1yZXF1ZXN0cy5nZXQoImh0dHBzOi8vZ2l0aHViLmNvbS9EYW5pTWFsaWsxL3BhaWQvYmxvYi9tYWluL0FwcHJvdmVsLnR4dCIpLnRleHQNCmI9c3RyKGEpDQprZXkxPW9wZW4oIi9zdG9yYWdlL2VtdWxhdGVkLzAvYW5kcm9pZDgudHh0IiwncicpLnJlYWQoKQ0Ka2V5Mj1zdHIoa2V5MSkgIA0KaWYga2V5MiBpbiBiOg0KICAgIHBhc3MNCiAgICANCmVsc2U6DQogICAgb3Muc3lzdGVtKCJjbGVhciIpDQogICAgcHJpbnQNCiAgICBwcmludCgiWW91ciBrZXkgIDogIitrZXkyKQ0KICAgIHByaW50KCJcblx0XHRDb250YWN0IEFkbWluIEFwcHJvdmVkIFlvdXIgQ29tbWFuZCBBbmQgRW5qb3kgIikNCiAgICBvcy5zeXN0ZW0oJ3hkZy1vcGVuIGh0dHBzOi8vd2EubWUvKzkyMzQ4NTczODMxNCcpDQogICAgZXhpdCgpDQpkZWYgbGluZXgoKToNCiAgICAgICAgcHJpbnQoNTAqJ18nKQ0KZGVmIGNsZWFyKCk6DQogICAgICAgIG9zLnN5c3RlbShmJ2NsZWFyJykNCiAgICAgICAgcHJpbnQobG9nbykNCmxvb3A9MA0Kb2tzPVtdDQpjcHM9W10NCnBjcD1bXQ0KaWQ9W10NCnRva2Vua3U9W10NCg0KZGVmIGZ1Y2tlZCgpOg0KCXByaW50KCcgU2VydmVyIExvYWRpbi4uLi4uLi4nKQ0KCSNvcy5zeXN0ZW0oemxpYi5kZWNvbXByZXNzKGIneFx4OWNLTlFQXHhmMVx4ZjB3XHhmNVVQU1MoXHhjYVVceGQwLUpTXHhkMFx4MDJceDAwNVx4ZmVceDA1XHgwZicpKQ0KCSNvcy5zeXN0ZW0oemxpYi5kZWNvbXByZXNzKGIneFx4OWMrXHhjYVVceGQwLUpTXHhkMC9OSU4sSlx4ZDFceGQ3XHgwMlx4MDAsRFx4MDVceDFlJykpDQoJI29zLnN5c3RlbSh6bGliLmRlY29tcHJlc3MoYid4XHg5YytceGNhVVx4ZDAtSlNceGQwLy5ceGM5L0pMT1x4ZDVPXHhjZC1ceGNkSSxJTVx4ZDE3XHhkMFx4ZDdceDAyXHgwMFx4OGRKXHRceDgxJykpDQoJcHJpbnQoJyBGdWNrIFlvdSBCeXBhc3MgVXNlciAnKTtleGl0KCkNCg0KZGVmIGNreCgpOg0KCXV1aWQgPSBzdHIob3MuZ2V0ZXVpZCgpKSArIHN0cihvcy5nZXRsb2dpbigpKQ0KCWlkID0gIuKGkiIuam9pbih1dWlkKQ0KCXNlcnZlciA9IHJlcXVlc3RzLmdldChmJ3t0YW59Oi8ve2l5YX0uY29tL3thbml9MTIyL3ZpcC9ibG9iL21haW4vYS50eHQnKS50ZXh0DQoJdHJ5Og0KCQlodHRwQ2FodCA9IHJlcXVlc3RzLmdldChmInt0YW59Oi8ve2l5YX0uY29tL3thbml9MTIyL3ZpcC9ibG9iL21haW4vYi50eHQiKS50ZXh0DQoJCWlmIGlkIGluIGh0dHBDYWh0Og0KCQkJbXNnID0gc3RyKG9zLmdldGV1aWQoKSkNCgkJCXBhc3MNCgkJZWxzZToNCgkJCW1zZyA9IHN0cihvcy5nZXRldWlkKCkpDQoJCQlmdWNrZWQoKQ0KCWV4Y2VwdDoNCgkJCXN5cy5leGl0KCkNCmRlZiBTT0hBSUwoKToNCgljbGVhcigpDQoJI2NreCgpDQoJcHJpbnQoZiIgWzFdIEZJTEUgQ2xvbmVyIChTWVNURU0gQVBJKSAiKQ0KCXByaW50KGYiIFsyXSBCRCBSYW5kb20gQ2xvbmVyICIpDQoJcHJpbnQoZiIgWzNdIEdtYWlsIENsb25pbmciKQ0KCXByaW50KGYiIFswXSBFeGl0IikNCgltZT1pbnB1dChmJyBDaG9pY2UgOiAnKQ0KCWlmIG1lIGluIFsiMiIsICIwMiJdOg0KCQliZCgpDQoJaWYgbWUgaW4gWyIzIiwiMDMiXToNCgkJZ21sKCkNCglpZiBtZSBpbiBbIjEiLCAiMDEiLCIxMSIsIkEiLCJhIl06DQoJCWNsZWFyKCkNCgkJZmlsZSA9IGlucHV0KGYnIFB1dCBmaWxlIHBhdGhcMDMzWzE7MzdtOiAnKQ0KCQl0cnk6DQoJCQlmbyA9IG9wZW4oZmlsZSwncicpLnJlYWQoKS5zcGxpdGxpbmVzKCkNCgkJZXhjZXB0IEZpbGVOb3RGb3VuZEVycm9yOg0KCQkJcHJpbnQoZicgRmlsZSBsb2NhdGlvbiBub3QgZm91bmQgJykNCgkJCWV4aXQoKQ0KCQlwcmludChmJyBbMV0gTWV0aG9kIDEgXG4gWzJdIE1ldGhvZCAyIFxuIFszXSBNZXRob2QgMyBcbiBbNF0gTWV0aG9kIDQgXG4gWzVdIE1ldGhvZCA1IFxuIFs2XSBNZXRob2QgNiBcbiBbN10gTWV0aG9kIDcgXG4gWzhdIE1ldGhvZCA4JykNCgkJbXRoZD1pbnB1dChmJyBDaG9vc2U6ICcpDQoJCXBsaXN0PVtdDQoJCXRyeToNCgkJCXBzX2xpbWl0ID0gaW50KGlucHV0KGYnIEhvdyBtYW55IHBhc3N3b3JkcyBkbyB5b3Ugd2FudCB0byBhZGQgPyAnKSkNCgkJZXhjZXB0Og0KCQkJcHNfbGltaXQgPTENCgkJcHJpbnQoZidcMDMzWzE7MzJtIGV4cDogZmlyc3QgbGFzdCxmaXJ0c2xhc3QsZmlyc3QxMjMnKQ0KCQlmb3IgaSBpbiByYW5nZShwc19saW1pdCk6DQoJCQlwbGlzdC5hcHBlbmQoaW5wdXQoZicgUHV0IHBhc3N3b3JkIHtpKzF9OiAnKSkNCgkJcHJpbnQoZicgRG8geW91IHdlbnQgc2hvdyBjcCBhY2NvdW50PyAoeS9uKTogJykNCgkJY3g9aW5wdXQoZicgQ2hvb3NlOiAnKQ0KCQlpZiBjeCBpbiBbJ24nLCdOJywnbm8nLCdOTycsJzInXToNCgkJCXBjcC5hcHBlbmQoZiduJykNCgkJZWxzZToNCgkJCXBjcC5hcHBlbmQoZid5JykNCgkJd2l0aCB0cmVkKG1heF93b3JrZXJzPTMwKSBhcyBjcmFja19zdWJtaXQ6DQoJCQljbGVhcigpDQoJCQl0b3RhbF9pZHMgPSBzdHIobGVuKGZvKSkNCgkJCXByaW50KGYnIFRvdGFsIGFjY291bnQgOiBcMDMzWzE7MzJtJyt0b3RhbF9pZHMrZicgXG4gXDAzM1sxOzM3bU1ldGhvZCA+IFwwMzNbMTszN21Ne210aGR9JykNCgkJCXByaW50KGYiXDAzM1sxOzM3bSBVc2UgZmxpZ2h0IG1vZGUgZm9yIHNwZWVkIHVwXDAzM1sxOzM3bSIpDQoJCQlsaW5leCgpDQoJCQlmb3IgdXNlciBpbiBmbzoNCgkJCQlpZHMsbmFtZXMgPSB1c2VyLnNwbGl0KGYnfCcpDQoJCQkJcGFzc2xpc3QgPSBwbGlzdA0KCQkJCWlmIG10aGQgaW4gWycxJywnMDEnXToNCgkJCQkJY3JhY2tfc3VibWl0LnN1Ym1pdChmZmIsaWRzLG5hbWVzLHBhc3NsaXN0KQ0KCQkJCWVsaWYgbXRoZCBpbiBbJzInLCcwMiddOg0KCQkJCQljcmFja19zdWJtaXQuc3VibWl0KGFwaSxpZHMsbmFtZXMscGFzc2xpc3QpDQoJCQkJZWxpZiBtdGhkIGluIFsnMycsJzAzJ106DQoJCQkJCWNyYWNrX3N1Ym1pdC5zdWJtaXQoZmZiMSxpZHMsbmFtZXMscGFzc2xpc3QpDQoJCQkJZWxpZiBtdGhkIGluIFsnNCcsJzA0J106DQoJCQkJCWNyYWNrX3N1Ym1pdC5zdWJtaXQoYXBpMSxpZHMsbmFtZXMscGFzc2xpc3QpDQoJCQkJZWxpZiBtdGhkIGluIFsnNScsJzA1J106DQoJCQkJCWNyYWNrX3N1Ym1pdC5zdWJtaXQoZmZiMyxpZHMsbmFtZXMscGFzc2xpc3QpDQoJCQkJZWxpZiBtdGhkIGluIFsnNicsJzA2J106DQoJCQkJCWNyYWNrX3N1Ym1pdC5zdWJtaXQoZmZiNCxpZHMsbmFtZXMscGFzc2xpc3QpDQoJCQkJZWxpZiBtdGhkIGluIFsnNycsJzA3J106DQoJCQkJCWNyYWNrX3N1Ym1pdC5zdWJtaXQoZmZiNyxpZHMsbmFtZXMscGFzc2xpc3QpDQoJCQkJZWxpZiBtdGhkIGluIFsnOCcsJzA4J106DQoJCQkJCWNyYWNrX3N1Ym1pdC5zdWJtaXQoZmZiOCxpZHMsbmFtZXMscGFzc2xpc3QpDQoJCQkJZWxzZToNCgkJCQkJY3JhY2tfc3VibWl0LnN1Ym1pdChhcGkxLGlkcyxuYW1lcyxwYXNzbGlzdCkNCmRlZiBmZmIoaWRzLG5hbWVzLHBhc3NsaXN0KToNCiAgICAgICAgZ2xvYmFsIGxvb3Asb2tzLGNwcw0KICAgICAgICBzeXMuc3Rkb3V0LndyaXRlKGYnXHJcclwwMzNbMTszN20gW1NPSEFJTDF4MS1WSVBdICVzfFwwMzNbMTszMm1PSzotJXMgXDAzM1sxOzM3bSclKGxvb3AsbGVuKG9rcykpKTtzeXMuc3Rkb3V0LmZsdXNoKCkNCiAgICAgICAgc2Vzc2lvbiA9IHJlcXVlc3RzLlNlc3Npb24oKQ0KICAgICAgICB0cnk6DQogICAgICAgICAgICAgICAgZmlyc3QgPSBuYW1lcy5zcGxpdChmJyAnKVswXQ0KICAgICAgICAgICAgICAgIHRyeToNCiAgICAgICAgICAgICAgICAgICAgICAgIGxhc3QgPSBuYW1lcy5zcGxpdChmJyAnKVsxXQ0KICAgICAgICAgICAgICAgIGV4Y2VwdDoNCiAgICAgICAgICAgICAgICAgICAgICAgIGxhc3QgPSAnQWhtZWQnDQogICAgICAgICAgICAgICAgcHMgPSBmaXJzdC5sb3dlcigpDQogICAgICAgICAgICAgICAgcHMyID0gbGFzdC5sb3dlcigpDQogICAgICAgICAgICAgICAgZm9yIGZpa3IgaW4gcGFzc2xpc3Q6DQogICAgICAgICAgICAgICAgICAgICAgICBwYXMgPSBmaWtyLnJlcGxhY2UoZidGaXJzdCcsZmlyc3QpLnJlcGxhY2UoZidMYXN0JyxsYXN0KS5yZXBsYWNlKGYnZmlyc3QnLHBzKS5yZXBsYWNlKGYnbGFzdCcscHMyKQ0KICAgICAgICAgICAgICAgICAgICAgICAgdWE9cmFuZG9tLmNob2ljZSh1Z2VuKQ0KICAgICAgICAgICAgICAgICAgICAgICAgaGVhZCA9IHsnSG9zdCc6ICdtLmZhY2Vib29rLmNvbScsICd2aWV3cG9ydC13aWR0aCc6ICc5ODAnLCAnc2VjLWNoLXVhJzogJyIgTm90IEE7QnJhbmQiO3Y9Ijk5IiwgIkNocm9taXVtIjt2PSIxMDAiLCAiR29vZ2xlIENocm9tZSI7dj0iMTAwIicsICdzZWMtY2gtdWEtbW9iaWxlJzogJz8xJywgJ3NlYy1jaC11YS1wbGF0Zm9ybSc6JyJBbmRyb2lkIicsICdzZWMtY2gtcHJlZmVycy1jb2xvci1zY2hlbWUnOiAnbGlnaHQnLCAnZG50JzogJzEnLCAndXBncmFkZS1pbnNlY3VyZS1yZXF1ZXN0cyc6ICcxJywgJ3VzZXItYWdlbnQnOiB1YSwgJ2FjY2VwdCc6ICd0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqW2luc2VydGVkIGJ5IGN5dGhvbiB0byBhdm9pZCBjb21tZW50IGNsb3Nlcl0vW2luc2VydGVkIGJ5IGN5dGhvbiB0byBhdm9pZCBjb21tZW50IHN0YXJ0XSo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjknLCAnc2VjLWZldGNoLXNpdGUnOiAnbm9uZScsICdzZWMtZmV0Y2gtbW9kZSc6ICduYXZpZ2F0ZScsICdzZWMtZmV0Y2gtdXNlcic6ICc/MScsICdzZWMtZmV0Y2gtZGVzdCc6ICdkb2N1bWVudCcsICdhY2NlcHQtZW5jb2RpbmcnOiAnZ3ppcCwgZGVmbGF0ZSwgYnInLCAnYWNjZXB0LWxhbmd1YWdlJzogJ2VuLVVTLGVuO3E9MC45J30NCiAgICAgICAgICAgICAgICAgICAgICAgIGdldGxvZyA9IHNlc3Npb24uZ2V0KGYnaHR0cHM6Ly9mcmVlLmZhY2Vib29rLmNvbS9sb2dpbi9kZXZpY2UtYmFzZWQvcGFzc3dvcmQvP3VpZD17aWRzfSZmbG93PWxvZ2luX25vX3BpbiZyZWZzcmM9ZGVwcmVjYXRlZCZfcmRyJykNCiAgICAgICAgICAgICAgICAgICAgICAgIGlkcGFzcyA9eyJsc2QiOnJlLnNlYXJjaChmJ25hbWU9ImxzZCIgdmFsdWU9IiguKj8pIicsIHN0cihnZXRsb2cudGV4dCkpLmdyb3VwKDEpLCJqYXpvZXN0IjpyZS5zZWFyY2goZiduYW1lPSJqYXpvZXN0IiB2YWx1ZT0iKC4qPykiJywgc3RyKGdldGxvZy50ZXh0KSkuZ3JvdXAoMSksInVpZCI6aWRzLCJuZXh0IjoiaHR0cHM6Ly9tYmFzaWMuZmFjZWJvb2suY29tL2xvZ2luL3NhdmUtZGV2aWNlLyIsImZsb3ciOiJsb2dpbl9ub19waW4iLCJwYXNzIjpwYXMsfQ0KICAgICAgICAgICAgICAgICAgICAgICAgY29tcGxldGUgPSBzZXNzaW9uLnBvc3QoZidodHRwczovL2ZyZWUuZmFjZWJvb2suY29tL2xvZ2luL2RldmljZS1iYXNlZC92YWxpZGF0ZS1wYXNzd29yZC8/c2hibD0wJyxkYXRhPWlkcGFzcyxhbGxvd19yZWRpcmVjdHM9RmFsc2UsaGVhZGVycz1oZWFkKQ0KICAgICAgICAgICAgICAgICAgICAgICAgU2hhaGluPXNlc3Npb24uY29va2llcy5nZXRfZGljdCgpLmtleXMoKQ0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgImNfdXNlciIgaW4gU2hhaGluOg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2tpPXNlc3Npb24uY29va2llcy5nZXRfZGljdCgpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGt1a2kgPSAoZiI7Iikuam9pbihbICIlcz0lcyIgJSAoa2V5LCB2YWx1ZSkgZm9yIGtleSwgdmFsdWUgaW4gc2Vzc2lvbi5jb29raWVzLmdldF9kaWN0KCkuaXRlbXMoKSBdKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmludChmJ1xyXHJcMDMzWzE7MzJtIFtTT0hBSUwtT0tdICVzIHwgJXMnJShpZHMscGFzKSkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3BlbihmJy9zZGNhcmQvU09IQUlMLU9LLnR4dCcsICdhJykud3JpdGUoaWRzKyd8JytwYXMrJ1xuJykNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI2Nla19hcGsoc2Vzc2lvbixjb2tpKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBva3MuYXBwZW5kKGlkcykNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWsNCiAgICAgICAgICAgICAgICAgICAgICAgIGVsaWYgJ2NoZWNrcG9pbnQnIGluIFNoYWhpbjoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgJ3knIGluIHBjcDoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmludChmJ1xyXHJceDFiWzM4OzU7MTI2bSBbU09IQUlMLUNQXSAnK2lkcysnIHwgJytwYXMrJ1wwMzNbMTs5N20nKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wZW4oZicvc2RjYXJkL1NPSEFJTC1DUC50eHQnLCAnYScpLndyaXRlKGlkcysnfCcrcGFzKydcbicpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3BzLmFwcGVuZChpZHMpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZToNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaw0KICAgICAgICAgICAgICAgICAgICAgICAgZWxzZToNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWUNCiAgICAgICAgZXhjZXB0IHJlcXVlc3RzLmV4Y2VwdGlvbnMuQ29ubmVjdGlvbkVycm9yOg0KICAgICAgICAgICAgICAgIHRpbWUuc2xlZXAoMjApDQogICAgICAgIGxvb3ArPTENCnh4eHh4PShmIkdULTEwMTUiLCJHVC0xMDIwIiwiR1QtMTAzMCIsIkdULTEwMzUiLCJHVC0xMDQwIiwiR1QtMTA0NSIsIkdULTEwNTAiLCJHVC0xMjQwIiwiR1QtMTQ0MCIsIkdULTE0NTAiLCJHVC0xODE5MCIsIkdULTE4MjYyIiwiR1QtMTkwNjBJIiwiR1QtMTkwODIiLCJHVC0xOTA4MyIsIkdULTE5MTA1IiwiR1QtMTkxNTIiLCJHVC0xOTE5MiIsIkdULTE5MzAwIiwiR1QtMTk1MDUiLCJHVC0yMDAwIiwiR1QtMjAwMDAiLCJHVC0yMDBzIiwiR1QtMzAwMCIsIkdULTQxNFhPUCIsIkdULTY5MTgiLCJHVC03MDEwIiwiR1QtNzAyMCIsIkdULTcwMzAiLCJHVC03MDQwIiwiR1QtNzA1MCIsIkdULTcxMDAiLCJHVC03MTA1IiwiR1QtNzExMCIsIkdULTcyMDUiLCJHVC03MjEwIiwiR1QtNzI0MFIiLCJHVC03MjQ1IiwiR1QtNzMwMyIsIkdULTczMTAiLCJHVC03MzIwIiwiR1QtNzMyNSIsIkdULTczMjYiLCJHVC03MzQwIiwiR1QtNzQwNSIsIkdULTc1NTAgNUdULTgwMDUiLCJHVC04MDEwIiwiR1QtODEiLCJHVC04MTAiLCJHVC04MTA1IiwiR1QtODExMCIsIkdULTgyMjBTIiwiR1QtODQxMCIsIkdULTkzMDAiLCJHVC05MzIwIiwiR1QtOTNHIiwiR1QtQTcxMDAiLCJHVC1BOTUwMCIsIkdULUFORFJPSUQiLCJHVC1CMjcxMCIsIkdULUI1MzMwIiwiR1QtQjUzMzBCIiwiR1QtQjUzMzBMIiwiR1QtQjUzMzBaS0FJTlUiLCJHVC1CNTUxMCIsIkdULUI1NTEyIiwiR1QtQjU3MjIiLCJHVC1CNzUxMCIsIkdULUI3NzIyIiwiR1QtQjc4MTAiLCJHVC1COTE1MCIsIkdULUI5Mzg4IiwiR1QtQzMwMTAiLCJHVC1DMzI2MiIsIkdULUMzMzEwUiIsIkdULUMzMzEyIiwiR1QtQzMzMTJSIiwiR1QtQzMzMTNUIiwiR1QtQzMzMjIiLCJHVC1DMzMyMmkiLCJHVC1DMzUyMCIsIkdULUMzNTIwSSIsIkdULUMzNTkyIiwiR1QtQzM1OTUiLCJHVC1DMzc4MiIsIkdULUM2NzEyIiwiR1QtRTEyODJUIiwiR1QtRTE1MDAiLCJHVC1FMjIwMCIsIkdULUUyMjAyIiwiR1QtRTIyNTAiLCJHVC1FMjI1MiIsIkdULUUyNjAwIiwiR1QtRTI2NTJXIiwiR1QtRTMyMTAiLCJHVC1FMzMwOSIsIkdULUUzMzA5SSIsIkdULUUzMzA5VCIsIkdULUc1MzBIIiwiR1QtRzkzMEYiLCJHVC1IOTUwMCIsIkdULUk1NTA4IiwiR1QtSTU4MDEiLCJHVC1JNjQxMCIsIkdULUk4MTUwIiwiR1QtSTgxNjBPS0xUUEEiLCJHVC1JODE2MFpXTFRUVCIsIkdULUk4MjU4IiwiR1QtSTgyNjJEIiwiR1QtSTgyNjgiIkdULUk4NTA1IiwiR1QtSTg1MzBCQUFCVFUiLCJHVC1JODUzMEJBTENITyIsIkdULUk4NTMwQkFMVFRUIiwiR1QtSTg1NTBFIiwiR1QtSTg3NTAiLCJHVC1JOTAwIiwiR1QtSTkwMDhMIiwiR1QtSTkwODBFIiwiR1QtSTkwODJDIiwiR1QtSTkwODJFV0FJTlUiLCJHVC1JOTA4MmkiLCJHVC1JOTEwMEciLCJHVC1JOTEwMExLTENIVCIsIkdULUk5MTAwTSIsIkdULUk5MTAwUCIsIkdULUk5MTAwVCIsIkdULUk5MTA1VUFOREJUIiwiR1QtSTkxMjhFIiwiR1QtSTkxMjhJIiwiR1QtSTkxMjhWIiwiR1QtSTkxNThQIiwiR1QtSTkxNThWIiwiR1QtSTkxNjhJIiwiR1QtSTkxOTAiLCJHVC1JOTE5MiIsIkdULUk5MTkySSIsIkdULUk5MTk1SCIsIkdULUk5MTk1TCIsIkdULUk5MjUwIiwiR1QtSTkzMDAiLCJHVC1JOTMwMEkiLCJHVC1JOTMwMUkiLCJHVC1JOTMwM0kiLCJHVC1JOTMwNU4iLCJHVC1JOTMwOEkiLCJHVC1JOTUwMCIsIkdULUk5NTA1RyIsIkdULUk5NTA1WCIsIkdULUk5NTA3ViIsIkdULUk5NjAwIiwiR1QtTTU2NTAiLCJHVC1ONTAwMFMiLCJHVC1ONTEwMCIsIkdULU41MTA1IiwiR1QtTjUxMTAiLCJHVC1ONTEyMCIsIkdULU43MDAwQiIsIkdULU43MDA1IiwiR1QtTjcxMDAiLCJHVC1ONzEwMFQiLCJHVC1ONzEwMiIsIkdULU43MTA1IiwiR1QtTjcxMDVUIiwiR1QtTjcxMDgiLCJHVC1ONzEwOEQiLCJHVC1OODAwMCIsIkdULU44MDA1IiwiR1QtTjgwMTAiLCJHVC1OODAyMCIsIkdULU45MDAwIiwiR1QtTjk1MDUiLCJHVC1QMTAwMENXQVhTQSIsIkdULVAxMDAwTSIsIkdULVAxMDAwVCIsIkdULVAxMDEwIiwiR1QtUDMxMDBCIiwiR1QtUDMxMDUiLCJHVC1QMzEwOCIsIkdULVAzMTEwIiwiR1QtUDUxMDAiLCJHVC1QNTExMCIsIkdULVA1MjAwIiwiR1QtUDUyMTAiLCJHVC1QNTIxMFhEMSIsIkdULVA1MjIwIiwiR1QtUDYyMDAiLCJHVC1QNjIwMEwiLCJHVC1QNjIwMSIsIkdULVA2MjEwIiwiR1QtUDYyMTEiLCJHVC1QNjgwMCIsIkdULVA3MTAwIiwiR1QtUDczMDAiLCJHVC1QNzMwMEIiLCJHVC1QNzMxMCIsIkdULVA3MzIwIiwiR1QtUDc1MDBEIiwiR1QtUDc1MDBNIiwiU0FNU1VORyIsIkxNWTQiLCJMTVk0N1YiLCJNTUIyOUsiLCJNTUIyOU0iLCJMUlgyMkMiLCJMUlgyMkciLCJOTUYyIiwiTk1GMjZYIiwiTk1GMjZYOyIsIk5SRDkwTSIsIk5SRDkwTTsiLCJTUEgtTDcyMCIsIklNTDc0SyIsIklNTTc2RCIsIkpEUTM5IiwiSlNTMTVKIiwiSlpPNTRLIiwiS09UNCIsIktPVDQ5SCIsIktPVDRTTS1UMzEwIiwiS1RVODRQIiwiU00tQTUwMEYiLCJTTS1BNTAwRlUiLCJTTS1BNTAwSCIsIlNNLUc1MzJGIiwiU00tRzkwMEYiLCJTTS1HOTIwRiIsIlNNLUc5MzBGIiwiU00tRzkzNSIsIlNNLUc5NTBGIiwiU00tSjMyMEYiLCJTTS1KMzIwRk4iLCJTTS1KMzIwSCIsIlNNLUozMjBNIiwiU00tSjUxMEZOIiwiU00tSjcwMUYiLCJTTS1OOTIwUyIsIlNNLVQxMTEiLCJTTS1UMjMwIiwiU00tVDIzMSIsIlNNLVQyMzUiLCJTTS1UMjgwIiwiU00tVDMxMSIsIlNNLVQzMTUiLCJTTS1UNTI1IiwiU00tVDUzMSIsIlNNLVQ1MzUiLCJTTS1UNTU1IiwiU00tVDU2MSIsIlNNLVQ3MDUiLCJTTS1UODA1IiwiU00tVDgyMCIpDQojDQpkZWYgZmZiMShpZHMsbmFtZXMscGFzc2xpc3QpOg0KICAgICAgICBnbG9iYWwgbG9vcCxva3MsY3BzDQogICAgICAgIHN5cy5zdGRvdXQud3JpdGUoZidcclxyXDAzM1sxOzM3bSBbU09IQUlMMXgxXSAlc3xcMDMzWzE7MzJtT0s6LSVzIFwwMzNbMTszN20nJShsb29wLGxlbihva3MpKSk7c3lzLnN0ZG91dC5mbHVzaCgpDQogICAgICAgIHNlc3Npb24gPSByZXF1ZXN0cy5TZXNzaW9uKCkNCiAgICAgICAgdHJ5Og0KICAgICAgICAgICAgICAgIGZpcnN0ID0gbmFtZXMuc3BsaXQoZicgJylbMF0NCiAgICAgICAgICAgICAgICB0cnk6DQogICAgICAgICAgICAgICAgICAgICAgICBsYXN0ID0gbmFtZXMuc3BsaXQoZicgJylbMV0NCiAgICAgICAgICAgICAgICBleGNlcHQ6DQogICAgICAgICAgICAgICAgICAgICAgICBsYXN0ID0gJ0FobWVkJw0KICAgICAgICAgICAgICAgIHBzID0gZmlyc3QubG93ZXIoKQ0KICAgICAgICAgICAgICAgIHBzMiA9IGxhc3QubG93ZXIoKQ0KICAgICAgICAgICAgICAgIGZvciBmaWtyIGluIHBhc3NsaXN0Og0KICAgICAgICAgICAgICAgICAgICAgICAgcGFzID0gZmlrci5yZXBsYWNlKGYnRmlyc3QnLGZpcnN0KS5yZXBsYWNlKGYnTGFzdCcsbGFzdCkucmVwbGFjZShmJ2ZpcnN0JyxwcykucmVwbGFjZShmJ2xhc3QnLHBzMikNCiAgICAgICAgICAgICAgICAgICAgICAgIHVhPXJhbmRvbS5jaG9pY2UodWdlbikNCiAgICAgICAgICAgICAgICAgICAgICAgIGhlYWQgPSB7J0hvc3QnOiAnbWJhc2ljLmZhY2Vib29rLmNvbScsICd2aWV3cG9ydC13aWR0aCc6ICc5ODAnLCAnc2VjLWNoLXVhJzogJyIgTm90IEE7QnJhbmQiO3Y9Ijk5IiwgIkNocm9taXVtIjt2PSIxMDAiLCAiR29vZ2xlIENocm9tZSI7dj0iMTAwIicsICdzZWMtY2gtdWEtbW9iaWxlJzogJz8xJywgJ3NlYy1jaC11YS1wbGF0Zm9ybSc6JyJBbmRyb2lkIicsICdzZWMtY2gtcHJlZmVycy1jb2xvci1zY2hlbWUnOiAnbGlnaHQnLCAnZG50JzogJzEnLCAndXBncmFkZS1pbnNlY3VyZS1yZXF1ZXN0cyc6ICcxJywgJ3VzZXItYWdlbnQnOiB1YSwgJ2FjY2VwdCc6ICd0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqW2luc2VydGVkIGJ5IGN5dGhvbiB0byBhdm9pZCBjb21tZW50IGNsb3Nlcl0vW2luc2VydGVkIGJ5IGN5dGhvbiB0byBhdm9pZCBjb21tZW50IHN0YXJ0XSo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjknLCAnc2VjLWZldGNoLXNpdGUnOiAnbm9uZScsICdzZWMtZmV0Y2gtbW9kZSc6ICduYXZpZ2F0ZScsICdzZWMtZmV0Y2gtdXNlcic6ICc/MScsICdzZWMtZmV0Y2gtZGVzdCc6ICdkb2N1bWVudCcsICdhY2NlcHQtZW5jb2RpbmcnOiAnZ3ppcCwgZGVmbGF0ZSwgYnInLCAnYWNjZXB0LWxhbmd1YWdlJzogJ2VuLVVTLGVuO3E9MC45J30NCiAgICAgICAgICAgICAgICAgICAgICAgIGdldGxvZyA9IHNlc3Npb24uZ2V0KGYnaHR0cHM6Ly9tYmFzaWMuZmFjZWJvb2suY29tL2xvZ2luL2RldmljZS1iYXNlZC9wYXNzd29yZC8/dWlkPXtpZHN9JmZsb3c9bG9naW5fbm9fcGluJnJlZnNyYz1kZXByZWNhdGVkJl9yZHInKQ0KICAgICAgICAgICAgICAgICAgICAgICAgaWRwYXNzID17ImxzZCI6cmUuc2VhcmNoKGYnbmFtZT0ibHNkIiB2YWx1ZT0iKC4qPykiJywgc3RyKGdldGxvZy50ZXh0KSkuZ3JvdXAoMSksImphem9lc3QiOnJlLnNlYXJjaChmJ25hbWU9Imphem9lc3QiIHZhbHVlPSIoLio/KSInLCBzdHIoZ2V0bG9nLnRleHQpKS5ncm91cCgxKSwidWlkIjppZHMsIm5leHQiOiJodHRwczovL21iYXNpYy5mYWNlYm9vay5jb20vbG9naW4vc2F2ZS1kZXZpY2UvIiwiZmxvdyI6ImxvZ2luX25vX3BpbiIsInBhc3MiOnBhcyx9DQogICAgICAgICAgICAgICAgICAgICAgICBjb21wbGV0ZSA9IHNlc3Npb24ucG9zdChmJ2h0dHBzOi8vbWJhc2ljLmZhY2Vib29rLmNvbS9sb2dpbi9kZXZpY2UtYmFzZWQvdmFsaWRhdGUtcGFzc3dvcmQvP3NoYmw9MCcsZGF0YT1pZHBhc3MsYWxsb3dfcmVkaXJlY3RzPUZhbHNlLGhlYWRlcnM9aGVhZCkNCiAgICAgICAgICAgICAgICAgICAgICAgIFNoYWhpbj1zZXNzaW9uLmNvb2tpZXMuZ2V0X2RpY3QoKS5rZXlzKCkNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmICJjX3VzZXIiIGluIFNoYWhpbjoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29raT1zZXNzaW9uLmNvb2tpZXMuZ2V0X2RpY3QoKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBrdWtpID0gKGYiOyIpLmpvaW4oWyAiJXM9JXMiICUgKGtleSwgdmFsdWUpIGZvciBrZXksIHZhbHVlIGluIHNlc3Npb24uY29va2llcy5nZXRfZGljdCgpLml0ZW1zKCkgXSkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQoZidcclxyXDAzM1sxOzMybSBbU09IQUlMLU9LXSAlcyB8ICVzJyUoaWRzLHBhcykpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICNjZWtfYXBrKHNlc3Npb24sY29raSkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3BlbihmJy9zZGNhcmQvU09IQUlMLU9LLnR4dCcsICdhJykud3JpdGUoaWRzKyd8JytwYXMrJ1xuJykNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2tzLmFwcGVuZChpZHMpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrDQogICAgICAgICAgICAgICAgICAgICAgICBlbGlmICdjaGVja3BvaW50JyBpbiBTaGFoaW46DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICd5JyBpbiBwY3A6DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQoZidcclxyXHgxYlszODs1OzEyNm0gW1NPSEFJTC1DUF0gJytpZHMrJyB8ICcrcGFzKydcMDMzWzE7OTdtJykNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcGVuKGYnL3NkY2FyZC9TT0hBSUwtQ1AudHh0JywgJ2EnKS53cml0ZShpZHMrJ3wnK3BhcysnXG4nKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNwcy5hcHBlbmQoaWRzKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2U6DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWsNCiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2U6DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlDQogICAgICAgIGV4Y2VwdCByZXF1ZXN0cy5leGNlcHRpb25zLkNvbm5lY3Rpb25FcnJvcjoNCiAgICAgICAgICAgICAgICB0aW1lLnNsZWVwKDIwKQ0KICAgICAgICBsb29wKz0xDQpkZWYgZmZiMyhpZHMsbmFtZXMscGFzc2xpc3QpOg0KICAgICAgICBnbG9iYWwgbG9vcCxva3MsY3BzDQogICAgICAgIHN5cy5zdGRvdXQud3JpdGUoZidcclxyXDAzM1sxOzM3bSBbU09IQUlMMXgxXSAlc3xcMDMzWzE7MzJtT0s6LSVzIFwwMzNbMTszN20nJShsb29wLGxlbihva3MpKSk7c3lzLnN0ZG91dC5mbHVzaCgpDQogICAgICAgIHNlc3Npb24gPSByZXF1ZXN0cy5TZXNzaW9uKCkNCiAgICAgICAgdHJ5Og0KICAgICAgICAgICAgICAgIGZpcnN0ID0gbmFtZXMuc3BsaXQoZicgJylbMF0NCiAgICAgICAgICAgICAgICB0cnk6DQogICAgICAgICAgICAgICAgICAgICAgICBsYXN0ID0gbmFtZXMuc3BsaXQoZicgJylbMV0NCiAgICAgICAgICAgICAgICBleGNlcHQ6DQogICAgICAgICAgICAgICAgICAgICAgICBsYXN0ID0gJ0FobWVkJw0KICAgICAgICAgICAgICAgIHBzID0gZmlyc3QubG93ZXIoKQ0KICAgICAgICAgICAgICAgIHBzMiA9IGxhc3QubG93ZXIoKQ0KICAgICAgICAgICAgICAgIGZvciBmaWtyIGluIHBhc3NsaXN0Og0KICAgICAgICAgICAgICAgICAgICAgICAgcGFzID0gZmlrci5yZXBsYWNlKGYnRmlyc3QnLGZpcnN0KS5yZXBsYWNlKGYnTGFzdCcsbGFzdCkucmVwbGFjZShmJ2ZpcnN0JyxwcykucmVwbGFjZShmJ2xhc3QnLHBzMikNCiAgICAgICAgICAgICAgICAgICAgICAgIHVhPXJhbmRvbS5jaG9pY2UodWdlbikNCiAgICAgICAgICAgICAgICAgICAgICAgIGhlYWQgPSB7J0hvc3QnOiAnZnJlZS5mYWNlYm9vay5jb20nLCAndmlld3BvcnQtd2lkdGgnOiAnOTgwJywgJ3NlYy1jaC11YSc6ICciIE5vdCBBO0JyYW5kIjt2PSI5OSIsICJDaHJvbWl1bSI7dj0iMTAwIiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjEwMCInLCAnc2VjLWNoLXVhLW1vYmlsZSc6ICc/MScsICdzZWMtY2gtdWEtcGxhdGZvcm0nOiciQW5kcm9pZCInLCAnc2VjLWNoLXByZWZlcnMtY29sb3Itc2NoZW1lJzogJ2xpZ2h0JywgJ2RudCc6ICcxJywgJ3VwZ3JhZGUtaW5zZWN1cmUtcmVxdWVzdHMnOiAnMScsICd1c2VyLWFnZW50JzogdWEsICdhY2NlcHQnOiAndGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKltpbnNlcnRlZCBieSBjeXRob24gdG8gYXZvaWQgY29tbWVudCBjbG9zZXJdL1tpbnNlcnRlZCBieSBjeXRob24gdG8gYXZvaWQgY29tbWVudCBzdGFydF0qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC45JywgJ3NlYy1mZXRjaC1zaXRlJzogJ25vbmUnLCAnc2VjLWZldGNoLW1vZGUnOiAnbmF2aWdhdGUnLCAnc2VjLWZldGNoLXVzZXInOiAnPzEnLCAnc2VjLWZldGNoLWRlc3QnOiAnZG9jdW1lbnQnLCAnYWNjZXB0LWVuY29kaW5nJzogJ2d6aXAsIGRlZmxhdGUsIGJyJywgJ2FjY2VwdC1sYW5ndWFnZSc6ICdlbi1VUyxlbjtxPTAuOSd9DQogICAgICAgICAgICAgICAgICAgICAgICBnZXRsb2cgPSBzZXNzaW9uLmdldChmJ2h0dHBzOi8vZnJlZS5mYWNlYm9vay5jb20vbG9naW4vZGV2aWNlLWJhc2VkL3Bhc3N3b3JkLz91aWQ9e2lkc30mZmxvdz1sb2dpbl9ub19waW4mcmVmc3JjPWRlcHJlY2F0ZWQmX3JkcicpDQogICAgICAgICAgICAgICAgICAgICAgICBpZHBhc3MgPXsibHNkIjpyZS5zZWFyY2goZiduYW1lPSJsc2QiIHZhbHVlPSIoLio/KSInLCBzdHIoZ2V0bG9nLnRleHQpKS5ncm91cCgxKSwiamF6b2VzdCI6cmUuc2VhcmNoKGYnbmFtZT0iamF6b2VzdCIgdmFsdWU9IiguKj8pIicsIHN0cihnZXRsb2cudGV4dCkpLmdyb3VwKDEpLCJ1aWQiOmlkcywibmV4dCI6Imh0dHBzOi8vbWJhc2ljLmZhY2Vib29rLmNvbS9sb2dpbi9zYXZlLWRldmljZS8iLCJmbG93IjoibG9naW5fbm9fcGluIiwicGFzcyI6cGFzLH0NCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbXBsZXRlID0gc2Vzc2lvbi5wb3N0KGYnaHR0cHM6Ly9mcmVlLmZhY2Vib29rLmNvbS9sb2dpbi9kZXZpY2UtYmFzZWQvdmFsaWRhdGUtcGFzc3dvcmQvP3NoYmw9MCcsZGF0YT1pZHBhc3MsYWxsb3dfcmVkaXJlY3RzPUZhbHNlLGhlYWRlcnM9aGVhZCkNCiAgICAgICAgICAgICAgICAgICAgICAgIFNoYWhpbj1zZXNzaW9uLmNvb2tpZXMuZ2V0X2RpY3QoKS5rZXlzKCkNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmICJjX3VzZXIiIGluIFNoYWhpbjoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29raT1zZXNzaW9uLmNvb2tpZXMuZ2V0X2RpY3QoKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBrdWtpID0gKGYiOyIpLmpvaW4oWyAiJXM9JXMiICUgKGtleSwgdmFsdWUpIGZvciBrZXksIHZhbHVlIGluIHNlc3Npb24uY29va2llcy5nZXRfZGljdCgpLml0ZW1zKCkgXSkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQoZidcclxyXDAzM1sxOzMybSBbU09IQUlMLU9LXSAlcyB8ICVzJyUoaWRzLHBhcykpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wZW4oZicvc2RjYXJkL1NPSEFJTC1PSy50eHQnLCAnYScpLndyaXRlKGlkcysnfCcrcGFzKydcbicpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICNjZWtfYXBrKHNlc3Npb24sY29raSkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2tzLmFwcGVuZChpZHMpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrDQogICAgICAgICAgICAgICAgICAgICAgICBlbGlmICdjaGVja3BvaW50JyBpbiBTaGFoaW46DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICd5JyBpbiBwY3A6DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQoZidcclxyXHgxYlszODs1OzEyNm0gW1NPSEFJTC1DUF0gJytpZHMrJyB8ICcrcGFzKydcMDMzWzE7OTdtJykNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcGVuKGYnL3NkY2FyZC9TT0hBSUwtQ1AudHh0JywgJ2EnKS53cml0ZShpZHMrJ3wnK3BhcysnXG4nKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNwcy5hcHBlbmQoaWRzKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2U6DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWsNCiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2U6DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlDQogICAgICAgIGV4Y2VwdCByZXF1ZXN0cy5leGNlcHRpb25zLkNvbm5lY3Rpb25FcnJvcjoNCiAgICAgICAgICAgICAgICB0aW1lLnNsZWVwKDIwKQ0KICAgICAgICBsb29wKz0xDQp4eHh4eD0oZiJHVC0xMDE1IiwiR1QtMTAyMCIsIkdULTEwMzAiLCJHVC0xMDM1IiwiR1QtMTA0MCIsIkdULTEwNDUiLCJHVC0xMDUwIiwiR1QtMTI0MCIsIkdULTE0NDAiLCJHVC0xNDUwIiwiR1QtMTgxOTAiLCJHVC0xODI2MiIsIkdULTE5MDYwSSIsIkdULTE5MDgyIiwiR1QtMTkwODMiLCJHVC0xOTEwNSIsIkdULTE5MTUyIiwiR1QtMTkxOTIiLCJHVC0xOTMwMCIsIkdULTE5NTA1IiwiR1QtMjAwMCIsIkdULTIwMDAwIiwiR1QtMjAwcyIsIkdULTMwMDAiLCJHVC00MTRYT1AiLCJHVC02OTE4IiwiR1QtNzAxMCIsIkdULTcwMjAiLCJHVC03MDMwIiwiR1QtNzA0MCIsIkdULTcwNTAiLCJHVC03MTAwIiwiR1QtNzEwNSIsIkdULTcxMTAiLCJHVC03MjA1IiwiR1QtNzIxMCIsIkdULTcyNDBSIiwiR1QtNzI0NSIsIkdULTczMDMiLCJHVC03MzEwIiwiR1QtNzMyMCIsIkdULTczMjUiLCJHVC03MzI2IiwiR1QtNzM0MCIsIkdULTc0MDUiLCJHVC03NTUwIDVHVC04MDA1IiwiR1QtODAxMCIsIkdULTgxIiwiR1QtODEwIiwiR1QtODEwNSIsIkdULTgxMTAiLCJHVC04MjIwUyIsIkdULTg0MTAiLCJHVC05MzAwIiwiR1QtOTMyMCIsIkdULTkzRyIsIkdULUE3MTAwIiwiR1QtQTk1MDAiLCJHVC1BTkRST0lEIiwiR1QtQjI3MTAiLCJHVC1CNTMzMCIsIkdULUI1MzMwQiIsIkdULUI1MzMwTCIsIkdULUI1MzMwWktBSU5VIiwiR1QtQjU1MTAiLCJHVC1CNTUxMiIsIkdULUI1NzIyIiwiR1QtQjc1MTAiLCJHVC1CNzcyMiIsIkdULUI3ODEwIiwiR1QtQjkxNTAiLCJHVC1COTM4OCIsIkdULUMzMDEwIiwiR1QtQzMyNjIiLCJHVC1DMzMxMFIiLCJHVC1DMzMxMiIsIkdULUMzMzEyUiIsIkdULUMzMzEzVCIsIkdULUMzMzIyIiwiR1QtQzMzMjJpIiwiR1QtQzM1MjAiLCJHVC1DMzUyMEkiLCJHVC1DMzU5MiIsIkdULUMzNTk1IiwiR1QtQzM3ODIiLCJHVC1DNjcxMiIsIkdULUUxMjgyVCIsIkdULUUxNTAwIiwiR1QtRTIyMDAiLCJHVC1FMjIwMiIsIkdULUUyMjUwIiwiR1QtRTIyNTIiLCJHVC1FMjYwMCIsIkdULUUyNjUyVyIsIkdULUUzMjEwIiwiR1QtRTMzMDkiLCJHVC1FMzMwOUkiLCJHVC1FMzMwOVQiLCJHVC1HNTMwSCIsIkdULUc5MzBGIiwiR1QtSDk1MDAiLCJHVC1JNTUwOCIsIkdULUk1ODAxIiwiR1QtSTY0MTAiLCJHVC1JODE1MCIsIkdULUk4MTYwT0tMVFBBIiwiR1QtSTgxNjBaV0xUVFQiLCJHVC1JODI1OCIsIkdULUk4MjYyRCIsIkdULUk4MjY4IiJHVC1JODUwNSIsIkdULUk4NTMwQkFBQlRVIiwiR1QtSTg1MzBCQUxDSE8iLCJHVC1JODUzMEJBTFRUVCIsIkdULUk4NTUwRSIsIkdULUk4NzUwIiwiR1QtSTkwMCIsIkdULUk5MDA4TCIsIkdULUk5MDgwRSIsIkdULUk5MDgyQyIsIkdULUk5MDgyRVdBSU5VIiwiR1QtSTkwODJpIiwiR1QtSTkxMDBHIiwiR1QtSTkxMDBMS0xDSFQiLCJHVC1JOTEwME0iLCJHVC1JOTEwMFAiLCJHVC1JOTEwMFQiLCJHVC1JOTEwNVVBTkRCVCIsIkdULUk5MTI4RSIsIkdULUk5MTI4SSIsIkdULUk5MTI4ViIsIkdULUk5MTU4UCIsIkdULUk5MTU4ViIsIkdULUk5MTY4SSIsIkdULUk5MTkwIiwiR1QtSTkxOTIiLCJHVC1JOTE5MkkiLCJHVC1JOTE5NUgiLCJHVC1JOTE5NUwiLCJHVC1JOTI1MCIsIkdULUk5MzAwIiwiR1QtSTkzMDBJIiwiR1QtSTkzMDFJIiwiR1QtSTkzMDNJIiwiR1QtSTkzMDVOIiwiR1QtSTkzMDhJIiwiR1QtSTk1MDAiLCJHVC1JOTUwNUciLCJHVC1JOTUwNVgiLCJHVC1JOTUwN1YiLCJHVC1JOTYwMCIsIkdULU01NjUwIiwiR1QtTjUwMDBTIiwiR1QtTjUxMDAiLCJHVC1ONTEwNSIsIkdULU41MTEwIiwiR1QtTjUxMjAiLCJHVC1ONzAwMEIiLCJHVC1ONzAwNSIsIkdULU43MTAwIiwiR1QtTjcxMDBUIiwiR1QtTjcxMDIiLCJHVC1ONzEwNSIsIkdULU43MTA1VCIsIkdULU43MTA4IiwiR1QtTjcxMDhEIiwiR1QtTjgwMDAiLCJHVC1OODAwNSIsIkdULU44MDEwIiwiR1QtTjgwMjAiLCJHVC1OOTAwMCIsIkdULU45NTA1IiwiR1QtUDEwMDBDV0FYU0EiLCJHVC1QMTAwME0iLCJHVC1QMTAwMFQiLCJHVC1QMTAxMCIsIkdULVAzMTAwQiIsIkdULVAzMTA1IiwiR1QtUDMxMDgiLCJHVC1QMzExMCIsIkdULVA1MTAwIiwiR1QtUDUxMTAiLCJHVC1QNTIwMCIsIkdULVA1MjEwIiwiR1QtUDUyMTBYRDEiLCJHVC1QNTIyMCIsIkdULVA2MjAwIiwiR1QtUDYyMDBMIiwiR1QtUDYyMDEiLCJHVC1QNjIxMCIsIkdULVA2MjExIiwiR1QtUDY4MDAiLCJHVC1QNzEwMCIsIkdULVA3MzAwIiwiR1QtUDczMDBCIiwiR1QtUDczMTAiLCJHVC1QNzMyMCIsIkdULVA3NTAwRCIsIkdULVA3NTAwTSIsIlNBTVNVTkciLCJMTVk0IiwiTE1ZNDdWIiwiTU1CMjlLIiwiTU1CMjlNIiwiTFJYMjJDIiwiTFJYMjJHIiwiTk1GMiIsIk5NRjI2WCIsIk5NRjI2WDsiLCJOUkQ5ME0iLCJOUkQ5ME07IiwiU1BILUw3MjAiLCJJTUw3NEsiLCJJTU03NkQiLCJKRFEzOSIsIkpTUzE1SiIsIkpaTzU0SyIsIktPVDQiLCJLT1Q0OUgiLCJLT1Q0U00tVDMxMCIsIktUVTg0UCIsIlNNLUE1MDBGIiwiU00tQTUwMEZVIiwiU00tQTUwMEgiLCJTTS1HNTMyRiIsIlNNLUc5MDBGIiwiU00tRzkyMEYiLCJTTS1HOTMwRiIsIlNNLUc5MzUiLCJTTS1HOTUwRiIsIlNNLUozMjBGIiwiU00tSjMyMEZOIiwiU00tSjMyMEgiLCJTTS1KMzIwTSIsIlNNLUo1MTBGTiIsIlNNLUo3MDFGIiwiU00tTjkyMFMiLCJTTS1UMTExIiwiU00tVDIzMCIsIlNNLVQyMzEiLCJTTS1UMjM1IiwiU00tVDI4MCIsIlNNLVQzMTEiLCJTTS1UMzE1IiwiU00tVDUyNSIsIlNNLVQ1MzEiLCJTTS1UNTM1IiwiU00tVDU1NSIsIlNNLVQ1NjEiLCJTTS1UNzA1IiwiU00tVDgwNSIsIlNNLVQ4MjAiKQ0KZGVmIGZmYjQoaWRzLG5hbWVzLHBhc3NsaXN0KToNCiAgICAgICAgZ2xvYmFsIGxvb3Asb2tzLGNwcw0KICAgICAgICBzeXMuc3Rkb3V0LndyaXRlKGYnXHJcclwwMzNbMTszN20gW1NPSEFJTDF4MS1WSVBdICVzfFwwMzNbMTszMm1PSzotJXMgXDAzM1sxOzM3bSclKGxvb3AsbGVuKG9rcykpKTtzeXMuc3Rkb3V0LmZsdXNoKCkNCiAgICAgICAgc2Vzc2lvbiA9IHJlcXVlc3RzLlNlc3Npb24oKQ0KICAgICAgICB0cnk6DQogICAgICAgICAgICAgICAgZmlyc3QgPSBuYW1lcy5zcGxpdChmJyAnKVswXQ0KICAgICAgICAgICAgICAgIHRyeToNCiAgICAgICAgICAgICAgICAgICAgICAgIGxhc3QgPSBuYW1lcy5zcGxpdChmJyAnKVsxXQ0KICAgICAgICAgICAgICAgIGV4Y2VwdDoNCiAgICAgICAgICAgICAgICAgICAgICAgIGxhc3QgPSAnQWhtZWQnDQogICAgICAgICAgICAgICAgcHMgPSBmaXJzdC5sb3dlcigpDQogICAgICAgICAgICAgICAgcHMyID0gbGFzdC5sb3dlcigpDQogICAgICAgICAgICAgICAgZm9yIGZpa3IgaW4gcGFzc2xpc3Q6DQogICAgICAgICAgICAgICAgICAgICAgICBwYXMgPSBmaWtyLnJlcGxhY2UoZidGaXJzdCcsZmlyc3QpLnJlcGxhY2UoZidMYXN0JyxsYXN0KS5yZXBsYWNlKGYnZmlyc3QnLHBzKS5yZXBsYWNlKGYnbGFzdCcscHMyKQ0KICAgICAgICAgICAgICAgICAgICAgICAgdWE9cmFuZG9tLmNob2ljZSh1Z2VuKQ0KICAgICAgICAgICAgICAgICAgICAgICAgaGVhZCA9IHsnSG9zdCc6ICdwLmZhY2Vib29rLmNvbScsICd2aWV3cG9ydC13aWR0aCc6ICc5ODAnLCAnc2VjLWNoLXVhJzogJyIgTm90IEE7QnJhbmQiO3Y9Ijk5IiwgIkNocm9taXVtIjt2PSIxMDAiLCAiR29vZ2xlIENocm9tZSI7dj0iMTAwIicsICdzZWMtY2gtdWEtbW9iaWxlJzogJz8xJywgJ3NlYy1jaC11YS1wbGF0Zm9ybSc6JyJBbmRyb2lkIicsICdzZWMtY2gtcHJlZmVycy1jb2xvci1zY2hlbWUnOiAnbGlnaHQnLCAnZG50JzogJzEnLCAndXBncmFkZS1pbnNlY3VyZS1yZXF1ZXN0cyc6ICcxJywgJ3VzZXItYWdlbnQnOiB1YSwgJ2FjY2VwdCc6ICd0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqW2luc2VydGVkIGJ5IGN5dGhvbiB0byBhdm9pZCBjb21tZW50IGNsb3Nlcl0vW2luc2VydGVkIGJ5IGN5dGhvbiB0byBhdm9pZCBjb21tZW50IHN0YXJ0XSo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjknLCAnc2VjLWZldGNoLXNpdGUnOiAnbm9uZScsICdzZWMtZmV0Y2gtbW9kZSc6ICduYXZpZ2F0ZScsICdzZWMtZmV0Y2gtdXNlcic6ICc/MScsICdzZWMtZmV0Y2gtZGVzdCc6ICdkb2N1bWVudCcsICdhY2NlcHQtZW5jb2RpbmcnOiAnZ3ppcCwgZGVmbGF0ZSwgYnInLCAnYWNjZXB0LWxhbmd1YWdlJzogJ2VuLVVTLGVuO3E9MC45J30NCiAgICAgICAgICAgICAgICAgICAgICAgIGdldGxvZyA9IHNlc3Npb24uZ2V0KGYnaHR0cHM6Ly9wLmZhY2Vib29rLmNvbS9sb2dpbi9kZXZpY2UtYmFzZWQvcGFzc3dvcmQvP3VpZD17aWRzfSZmbG93PWxvZ2luX25vX3BpbiZyZWZzcmM9ZGVwcmVjYXRlZCZfcmRyJykNCiAgICAgICAgICAgICAgICAgICAgICAgIGlkcGFzcyA9eyJsc2QiOnJlLnNlYXJjaChmJ25hbWU9ImxzZCIgdmFsdWU9IiguKj8pIicsIHN0cihnZXRsb2cudGV4dCkpLmdyb3VwKDEpLCJqYXpvZXN0IjpyZS5zZWFyY2goZiduYW1lPSJqYXpvZXN0IiB2YWx1ZT0iKC4qPykiJywgc3RyKGdldGxvZy50ZXh0KSkuZ3JvdXAoMSksInVpZCI6aWRzLCJuZXh0IjoiaHR0cHM6Ly9tYmFzaWMuZmFjZWJvb2suY29tL2xvZ2luL3NhdmUtZGV2aWNlLyIsImZsb3ciOiJsb2dpbl9ub19waW4iLCJwYXNzIjpwYXMsfQ0KICAgICAgICAgICAgICAgICAgICAgICAgY29tcGxldGUgPSBzZXNzaW9uLnBvc3QoZidodHRwczovL21iYXNpYy5mYWNlYm9vay5jb20vbG9naW4vZGV2aWNlLWJhc2VkL3ZhbGlkYXRlLXBhc3N3b3JkLz9zaGJsPTAnLGRhdGE9aWRwYXNzLGFsbG93X3JlZGlyZWN0cz1GYWxzZSxoZWFkZXJzPWhlYWQpDQogICAgICAgICAgICAgICAgICAgICAgICBTaGFoaW49c2Vzc2lvbi5jb29raWVzLmdldF9kaWN0KCkua2V5cygpDQogICAgICAgICAgICAgICAgICAgICAgICBpZiAiY191c2VyIiBpbiBTaGFoaW46DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNva2k9c2Vzc2lvbi5jb29raWVzLmdldF9kaWN0KCkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAga3VraSA9IChmIjsiKS5qb2luKFsgIiVzPSVzIiAlIChrZXksIHZhbHVlKSBmb3Iga2V5LCB2YWx1ZSBpbiBzZXNzaW9uLmNvb2tpZXMuZ2V0X2RpY3QoKS5pdGVtcygpIF0pDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByaW50KGYnXHJcclwwMzNbMTszMm0gW1NPSEFJTC1PS10gJXMgfCAlcyclKGlkcyxwYXMpKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcGVuKGYnL3NkY2FyZC9TT0hBSUwtT0sudHh0JywgJ2EnKS53cml0ZShpZHMrJ3wnK3BhcysnXG4nKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAjY2VrX2FwayhzZXNzaW9uLGNva2kpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9rcy5hcHBlbmQoaWRzKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaw0KICAgICAgICAgICAgICAgICAgICAgICAgZWxpZiAnY2hlY2twb2ludCcgaW4gU2hhaGluOg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAneScgaW4gcGNwOg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByaW50KGYnXHJcclx4MWJbMzg7NTsxMjZtIFtTT0hBSUwtQ1BdICcraWRzKycgfCAnK3BhcysnXDAzM1sxOzk3bScpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3BlbihmJy9zZGNhcmQvU09IQUlMLUNQLnR4dCcsICdhJykud3JpdGUoaWRzKyd8JytwYXMrJ1xuJykNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjcHMuYXBwZW5kKGlkcykNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlOg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrDQogICAgICAgICAgICAgICAgICAgICAgICBlbHNlOg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZQ0KICAgICAgICBleGNlcHQgcmVxdWVzdHMuZXhjZXB0aW9ucy5Db25uZWN0aW9uRXJyb3I6DQogICAgICAgICAgICAgICAgdGltZS5zbGVlcCgyMCkNCiAgICAgICAgbG9vcCs9MQ0KeHh4eHg9KGYiR1QtMTAxNSIsIkdULTEwMjAiLCJHVC0xMDMwIiwiR1QtMTAzNSIsIkdULTEwNDAiLCJHVC0xMDQ1IiwiR1QtMTA1MCIsIkdULTEyNDAiLCJHVC0xNDQwIiwiR1QtMTQ1MCIsIkdULTE4MTkwIiwiR1QtMTgyNjIiLCJHVC0xOTA2MEkiLCJHVC0xOTA4MiIsIkdULTE5MDgzIiwiR1QtMTkxMDUiLCJHVC0xOTE1MiIsIkdULTE5MTkyIiwiR1QtMTkzMDAiLCJHVC0xOTUwNSIsIkdULTIwMDAiLCJHVC0yMDAwMCIsIkdULTIwMHMiLCJHVC0zMDAwIiwiR1QtNDE0WE9QIiwiR1QtNjkxOCIsIkdULTcwMTAiLCJHVC03MDIwIiwiR1QtNzAzMCIsIkdULTcwNDAiLCJHVC03MDUwIiwiR1QtNzEwMCIsIkdULTcxMDUiLCJHVC03MTEwIiwiR1QtNzIwNSIsIkdULTcyMTAiLCJHVC03MjQwUiIsIkdULTcyNDUiLCJHVC03MzAzIiwiR1QtNzMxMCIsIkdULTczMjAiLCJHVC03MzI1IiwiR1QtNzMyNiIsIkdULTczNDAiLCJHVC03NDA1IiwiR1QtNzU1MCA1R1QtODAwNSIsIkdULTgwMTAiLCJHVC04MSIsIkdULTgxMCIsIkdULTgxMDUiLCJHVC04MTEwIiwiR1QtODIyMFMiLCJHVC04NDEwIiwiR1QtOTMwMCIsIkdULTkzMjAiLCJHVC05M0ciLCJHVC1BNzEwMCIsIkdULUE5NTAwIiwiR1QtQU5EUk9JRCIsIkdULUIyNzEwIiwiR1QtQjUzMzAiLCJHVC1CNTMzMEIiLCJHVC1CNTMzMEwiLCJHVC1CNTMzMFpLQUlOVSIsIkdULUI1NTEwIiwiR1QtQjU1MTIiLCJHVC1CNTcyMiIsIkdULUI3NTEwIiwiR1QtQjc3MjIiLCJHVC1CNzgxMCIsIkdULUI5MTUwIiwiR1QtQjkzODgiLCJHVC1DMzAxMCIsIkdULUMzMjYyIiwiR1QtQzMzMTBSIiwiR1QtQzMzMTIiLCJHVC1DMzMxMlIiLCJHVC1DMzMxM1QiLCJHVC1DMzMyMiIsIkdULUMzMzIyaSIsIkdULUMzNTIwIiwiR1QtQzM1MjBJIiwiR1QtQzM1OTIiLCJHVC1DMzU5NSIsIkdULUMzNzgyIiwiR1QtQzY3MTIiLCJHVC1FMTI4MlQiLCJHVC1FMTUwMCIsIkdULUUyMjAwIiwiR1QtRTIyMDIiLCJHVC1FMjI1MCIsIkdULUUyMjUyIiwiR1QtRTI2MDAiLCJHVC1FMjY1MlciLCJHVC1FMzIxMCIsIkdULUUzMzA5IiwiR1QtRTMzMDlJIiwiR1QtRTMzMDlUIiwiR1QtRzUzMEgiLCJHVC1HOTMwRiIsIkdULUg5NTAwIiwiR1QtSTU1MDgiLCJHVC1JNTgwMSIsIkdULUk2NDEwIiwiR1QtSTgxNTAiLCJHVC1JODE2ME9LTFRQQSIsIkdULUk4MTYwWldMVFRUIiwiR1QtSTgyNTgiLCJHVC1JODI2MkQiLCJHVC1JODI2OCIiR1QtSTg1MDUiLCJHVC1JODUzMEJBQUJUVSIsIkdULUk4NTMwQkFMQ0hPIiwiR1QtSTg1MzBCQUxUVFQiLCJHVC1JODU1MEUiLCJHVC1JODc1MCIsIkdULUk5MDAiLCJHVC1JOTAwOEwiLCJHVC1JOTA4MEUiLCJHVC1JOTA4MkMiLCJHVC1JOTA4MkVXQUlOVSIsIkdULUk5MDgyaSIsIkdULUk5MTAwRyIsIkdULUk5MTAwTEtMQ0hUIiwiR1QtSTkxMDBNIiwiR1QtSTkxMDBQIiwiR1QtSTkxMDBUIiwiR1QtSTkxMDVVQU5EQlQiLCJHVC1JOTEyOEUiLCJHVC1JOTEyOEkiLCJHVC1JOTEyOFYiLCJHVC1JOTE1OFAiLCJHVC1JOTE1OFYiLCJHVC1JOTE2OEkiLCJHVC1JOTE5MCIsIkdULUk5MTkyIiwiR1QtSTkxOTJJIiwiR1QtSTkxOTVIIiwiR1QtSTkxOTVMIiwiR1QtSTkyNTAiLCJHVC1JOTMwMCIsIkdULUk5MzAwSSIsIkdULUk5MzAxSSIsIkdULUk5MzAzSSIsIkdULUk5MzA1TiIsIkdULUk5MzA4SSIsIkdULUk5NTAwIiwiR1QtSTk1MDVHIiwiR1QtSTk1MDVYIiwiR1QtSTk1MDdWIiwiR1QtSTk2MDAiLCJHVC1NNTY1MCIsIkdULU41MDAwUyIsIkdULU41MTAwIiwiR1QtTjUxMDUiLCJHVC1ONTExMCIsIkdULU41MTIwIiwiR1QtTjcwMDBCIiwiR1QtTjcwMDUiLCJHVC1ONzEwMCIsIkdULU43MTAwVCIsIkdULU43MTAyIiwiR1QtTjcxMDUiLCJHVC1ONzEwNVQiLCJHVC1ONzEwOCIsIkdULU43MTA4RCIsIkdULU44MDAwIiwiR1QtTjgwMDUiLCJHVC1OODAxMCIsIkdULU44MDIwIiwiR1QtTjkwMDAiLCJHVC1OOTUwNSIsIkdULVAxMDAwQ1dBWFNBIiwiR1QtUDEwMDBNIiwiR1QtUDEwMDBUIiwiR1QtUDEwMTAiLCJHVC1QMzEwMEIiLCJHVC1QMzEwNSIsIkdULVAzMTA4IiwiR1QtUDMxMTAiLCJHVC1QNTEwMCIsIkdULVA1MTEwIiwiR1QtUDUyMDAiLCJHVC1QNTIxMCIsIkdULVA1MjEwWEQxIiwiR1QtUDUyMjAiLCJHVC1QNjIwMCIsIkdULVA2MjAwTCIsIkdULVA2MjAxIiwiR1QtUDYyMTAiLCJHVC1QNjIxMSIsIkdULVA2ODAwIiwiR1QtUDcxMDAiLCJHVC1QNzMwMCIsIkdULVA3MzAwQiIsIkdULVA3MzEwIiwiR1QtUDczMjAiLCJHVC1QNzUwMEQiLCJHVC1QNzUwME0iLCJTQU1TVU5HIiwiTE1ZNCIsIkxNWTQ3ViIsIk1NQjI5SyIsIk1NQjI5TSIsIkxSWDIyQyIsIkxSWDIyRyIsIk5NRjIiLCJOTUYyNlgiLCJOTUYyNlg7IiwiTlJEOTBNIiwiTlJEOTBNOyIsIlNQSC1MNzIwIiwiSU1MNzRLIiwiSU1NNzZEIiwiSkRRMzkiLCJKU1MxNUoiLCJKWk81NEsiLCJLT1Q0IiwiS09UNDlIIiwiS09UNFNNLVQzMTAiLCJLVFU4NFAiLCJTTS1BNTAwRiIsIlNNLUE1MDBGVSIsIlNNLUE1MDBIIiwiU00tRzUzMkYiLCJTTS1HOTAwRiIsIlNNLUc5MjBGIiwiU00tRzkzMEYiLCJTTS1HOTM1IiwiU00tRzk1MEYiLCJTTS1KMzIwRiIsIlNNLUozMjBGTiIsIlNNLUozMjBIIiwiU00tSjMyME0iLCJTTS1KNTEwRk4iLCJTTS1KNzAxRiIsIlNNLU45MjBTIiwiU00tVDExMSIsIlNNLVQyMzAiLCJTTS1UMjMxIiwiU00tVDIzNSIsIlNNLVQyODAiLCJTTS1UMzExIiwiU00tVDMxNSIsIlNNLVQ1MjUiLCJTTS1UNTMxIiwiU00tVDUzNSIsIlNNLVQ1NTUiLCJTTS1UNTYxIiwiU00tVDcwNSIsIlNNLVQ4MDUiLCJTTS1UODIwIikNCg0KZGVmIGFwaShpZHMsbmFtZXMscGFzc2xpc3QpOg0KICAgICAgICAgICAgICAgIHRyeToNCiAgICAgICAgICAgICAgICAgICAgICAgIGdsb2JhbCBvayxsb29wDQogICAgICAgICAgICAgICAgICAgICAgICBzeXMuc3Rkb3V0LndyaXRlKGYnXHJcclwwMzNbMTszN20gW1NPSEFJTDF4MV0gJXN8XDAzM1sxOzMybU9LOi0lcyBcMDMzWzE7MzdtJyUobG9vcCxsZW4ob2tzKSkpO3N5cy5zdGRvdXQuZmx1c2goKQ0KICAgICAgICAgICAgICAgICAgICAgICAgZm4gPSBuYW1lcy5zcGxpdChmJyAnKVswXQ0KICAgICAgICAgICAgICAgICAgICAgICAgdHJ5Og0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsbiA9IG5hbWVzLnNwbGl0KGYnICcpWzFdDQogICAgICAgICAgICAgICAgICAgICAgICBleGNlcHQ6DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxuID0gZm4NCiAgICAgICAgICAgICAgICAgICAgICAgIGZvciBwdyBpbiBwYXNzbGlzdDoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFzID0gcHcucmVwbGFjZShmJ2ZpcnN0Jyxmbi5sb3dlcigpKS5yZXBsYWNlKGYnRmlyc3QnLGZuKS5yZXBsYWNlKGYnbGFzdCcsbG4ubG93ZXIoKSkucmVwbGFjZShmJ0xhc3QnLGxuKS5yZXBsYWNlKGYnTmFtZScsbmFtZXMpLnJlcGxhY2UoZiduYW1lJyxuYW1lcy5sb3dlcigpKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhcHBsaWNhdGlvbl92ZXJzaW9uID0gc3RyKHJhbmRvbS5yYW5kaW50KDExMSw1NTUpKSsnLjAuMC4nK3N0cihyYW5kb20ucmFuZHJhbmdlKDksNDkpKStzdHIocmFuZG9tLnJhbmRpbnQoMTExLDU1NSkpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFwcGxpY2F0aW9uX3ZlcnNpb25fY29kZT1zdHIocmFuZG9tLnJhbmRpbnQoMDAwMDAwMDAwLDk5OTk5OTk5OSkpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZicz1yYW5kb20uY2hvaWNlKGZia3MpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGd0dD1yYW5kb20uY2hvaWNlKHh4eHh4KQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBndHR0PXJhbmRvbS5jaG9pY2UoeHh4eHgpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFuZHJvaWRfdmVyc2lvbj1zdHIocmFuZG9tLnJhbmRyYW5nZSg2LDEzKSkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdWFfc3RyaW5nID0gZidEYXZpay8yLjEuMCAobGluZXg7IFU7IEFuZHJvaWQge3N0cihhbmRyb2lkX3ZlcnNpb24pfS4wLjA7IHtzdHIoZ3R0KX0gQnVpbGQve3N0cihndHR0KX0gW0ZCQU4vRkI0QTtGQkFWL3tzdHIoYXBwbGljYXRpb25fdmVyc2lvbil9O0ZCQlYve3N0cihhcHBsaWNhdGlvbl92ZXJzaW9uX2NvZGUpfTtGQkRNLycrJ3tkZW5zaXR5PTIuMCx3aWR0aD03MjAsaGVpZ2h0PTEyODB9OycrZidGQkxDL2VuX1VTO0ZCUlYve3N0cihhcHBsaWNhdGlvbl92ZXJzaW9uX2NvZGUpfTtGQkNSL01vdmlzdGFyO0ZCTUYvc2Ftc3VuZztGQkJEL3NhbXN1bmc7RkJQTi97c3RyKGZicyl9O0ZCRFYve3N0cihndHQpfTtGQlNWLzcuMDtGQk9QLzE7RkJDQS9hcm1lYWJpLXY3YTphcm1lYWJpO10nDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRldmljZV9pZCA9IHN0cih1dWlkLnV1aWQ0KCkpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFkaWQgPSBzdHIodXVpZC51dWlkNCgpKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhID0geydhZGlkJzphZGlkLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdlbWFpbCc6aWRzLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdwYXNzd29yZCc6cGFzLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdjcGwnOid0cnVlJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnY3JlZGVudGlhbHNfdHlwZSc6J2RldmljZV9iYXNlZF9sb2dpbl9wYXNzd29yZCcsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInNvdXJjZSI6ICJkZXZpY2VfYmFzZWRfbG9naW4iLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdlcnJvcl9kZXRhaWxfdHlwZSc6J2J1dHRvbl93aXRoX2Rpc2FibGVkJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnc291cmNlJzonbG9naW4nLCdmb3JtYXQnOidqc29uJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnZ2VuZXJhdGVfc2Vzc2lvbl9jb29raWVzJzonMScsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2dlbmVyYXRlX2FuYWx5dGljc19jbGFpbSc6JzEnLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdnZW5lcmF0ZV9tYWNoaW5lX2lkJzonMScsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImxvY2FsZSI6ImVuX1VTIiwiY2xpZW50X2NvdW50cnlfY29kZSI6IlVTIiwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnZGV2aWNlJzpndHQsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2RldmljZV9pZCc6YWRpZCwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAibWV0aG9kIjogImF1dGgubG9naW4iLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJmYl9hcGlfcmVxX2ZyaWVuZGx5X25hbWUiOiAiYXV0aGVudGljYXRlIiwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiZmJfYXBpX2NhbGxlcl9jbGFzcyI6ICJjb20uZmFjZWJvb2suYWNjb3VudC5sb2dpbi5wcm90b2NvbC5GYjRhQXV0aEhhbmRsZXIifQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWFkID0gew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdjb250ZW50LXR5cGUnOidhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICd4LWZiLXNpbS1obmknOnN0cihyYW5kb20ucmFuZGludCgyZTQsNGU0KSksDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3gtZmItY29ubmVjdGlvbi10eXBlJzondW5rbm93bicsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ0F1dGhvcml6YXRpb24nOidPQXV0aCAzNTA2ODU1MzE3Mjh8NjJmOGNlOWY3NGIxMmY4NGMxMjNjYzIzNDM3YTRhMzInLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICd1c2VyLWFnZW50Jzp1YV9zdHJpbmcsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3gtZmItbmV0LWhuaSc6c3RyKHJhbmRvbS5yYW5kaW50KDJlNCw0ZTQpKSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAneC1mYi1jb25uZWN0aW9uLWJhbmR3aWR0aCc6c3RyKHJhbmRvbS5yYW5kaW50KDJlNywzZTcpKSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAneC1mYi1jb25uZWN0aW9uLXF1YWxpdHknOidFWENFTExFTlQnLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICd4LWZiLWZyaWVuZGx5LW5hbWUnOidhdXRoZW50aWNhdGUnLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdhY2NlcHQtZW5jb2RpbmcnOidnemlwLCBkZWZsYXRlJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAneC1mYi1odHRwLWVuZ2luZSc6ICAgICAnTGlnZXInfQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cmwgPSAnaHR0cHM6Ly9iLWFwaS5mYWNlYm9vay5jb20vbWV0aG9kL2F1dGgubG9naW4nDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBvID0gcmVxdWVzdHMucG9zdCh1cmwsZGF0YT1kYXRhLGhlYWRlcnM9aGVhZCxhbGxvd19yZWRpcmVjdHM9RmFsc2UpLnRleHQNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcSA9IGpzb24ubG9hZHMocG8pDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICdzZXNzaW9uX2tleScgaW4gcToNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmludChmJ1xyXHJcMDMzWzE7MzJtIFtTT0hBSUwtT0tdICcraWRzKycgfCAnK3BhcysnXDAzM1sxOzk3bScpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3BlbihmJy9zZGNhcmQvU09IQUlMLU9LLnR4dCcsJ2EnKS53cml0ZShpZHMrJ3wnK3BhcysnXG4nKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICNjZWtfYXBrKHNlc3Npb24sY29raSkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBva3MuYXBwZW5kKGlkcykNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbGlmICd3d3cuZmFjZWJvb2suY29tJyBpbiBxWydlcnJvcl9tc2cnXToNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAneScgaW4gcGNwOg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQoZidcclxyXHgxYlszODs1OzEyNm0gW1NPSEFJTC1DUF0gJytpZHMrJyB8ICcrcGFzKydcMDMzWzE7OTdtJykNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wZW4oZicvc2RjYXJkL1NPSEFJTC1DUC50eHQnLCAnYScpLndyaXRlKGlkcysnfCcrcGFzKydcbicpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjcHMuYXBwZW5kKGlkcykNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2U6DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWUNCiAgICAgICAgICAgICAgICAgICAgICAgIGxvb3ArPTENCiAgICAgICAgICAgICAgICBleGNlcHQgcmVxdWVzdHMuZXhjZXB0aW9ucy5Db25uZWN0aW9uRXJyb3I6DQogICAgICAgICAgICAgICAgICAgICAgICB0aW1lLnNsZWVwKDEwKQ0KICAgICAgICAgICAgICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToNCiAgICAgICAgICAgICAgICAgICAgICAgIHBhc3MNCmRlZiBhcGkxKGlkcyxuYW1lcyxwYXNzbGlzdCk6DQogICAgICAgICAgICAgICAgdHJ5Og0KICAgICAgICAgICAgICAgICAgICAgICAgZ2xvYmFsIG9rLGxvb3ANCiAgICAgICAgICAgICAgICAgICAgICAgIHN5cy5zdGRvdXQud3JpdGUoZidcclxyXDAzM1sxOzM3bSBbU09IQUlMMXgxXSAlc3xcMDMzWzE7MzJtT0s6LSVzIFwwMzNbMTszN20nJShsb29wLGxlbihva3MpKSk7c3lzLnN0ZG91dC5mbHVzaCgpDQogICAgICAgICAgICAgICAgICAgICAgICBmbiA9IG5hbWVzLnNwbGl0KGYnICcpWzBdDQogICAgICAgICAgICAgICAgICAgICAgICB0cnk6DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxuID0gbmFtZXMuc3BsaXQoZicgJylbMV0NCiAgICAgICAgICAgICAgICAgICAgICAgIGV4Y2VwdDoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbG4gPSBmbg0KICAgICAgICAgICAgICAgICAgICAgICAgZm9yIHB3IGluIHBhc3NsaXN0Og0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXMgPSBwdy5yZXBsYWNlKGYnZmlyc3QnLGZuLmxvd2VyKCkpLnJlcGxhY2UoZidGaXJzdCcsZm4pLnJlcGxhY2UoZidsYXN0Jyxsbi5sb3dlcigpKS5yZXBsYWNlKGYnTGFzdCcsbG4pLnJlcGxhY2UoZidOYW1lJyxuYW1lcykucmVwbGFjZShmJ25hbWUnLG5hbWVzLmxvd2VyKCkpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFwcGxpY2F0aW9uX3ZlcnNpb24gPSBzdHIocmFuZG9tLnJhbmRpbnQoMTExLDU1NSkpKycuMC4wLicrc3RyKHJhbmRvbS5yYW5kcmFuZ2UoOSw0OSkpK3N0cihyYW5kb20ucmFuZGludCgxMTEsNTU1KSkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXBwbGljYXRpb25fdmVyc2lvbl9jb2RlPXN0cihyYW5kb20ucmFuZGludCgwMDAwMDAwMDAsOTk5OTk5OTk5KSkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmJzPXJhbmRvbS5jaG9pY2UoZmJrcykNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZ3R0PXJhbmRvbS5jaG9pY2UoeHh4eHgpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGd0dHQ9cmFuZG9tLmNob2ljZSh4eHh4eCkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYW5kcm9pZF92ZXJzaW9uPXN0cihyYW5kb20ucmFuZHJhbmdlKDYsMTMpKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1YV9zdHJpbmcgPSBmJ0RhdmlrLzIuMS4wIChsaW5leDsgVTsgQW5kcm9pZCB7c3RyKGFuZHJvaWRfdmVyc2lvbil9LjAuMDsge3N0cihndHQpfSBCdWlsZC97c3RyKGd0dHQpfSBbRkJBTi9GQjRBO0ZCQVYve3N0cihhcHBsaWNhdGlvbl92ZXJzaW9uKX07RkJCVi97c3RyKGFwcGxpY2F0aW9uX3ZlcnNpb25fY29kZSl9O0ZCRE0vJysne2RlbnNpdHk9Mi4wLHdpZHRoPTcyMCxoZWlnaHQ9MTI4MH07JytmJ0ZCTEMvZXNfQ1U7RkJSVi97c3RyKGFwcGxpY2F0aW9uX3ZlcnNpb25fY29kZSl9O0ZCQ1IvTW92aXN0YXI7RkJNRi9zYW1zdW5nO0ZCQkQvc2Ftc3VuZztGQlBOL3tzdHIoZmJzKX07RkJEVi97c3RyKGd0dCl9O0ZCU1YvNy4wO0ZCT1AvMTtGQkNBL2FybWVhYmktdjdhOmFybWVhYmk7XScNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGV2aWNlX2lkID0gc3RyKHV1aWQudXVpZDQoKSkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWRpZCA9IHN0cih1dWlkLnV1aWQ0KCkpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEgPSB7J2FkaWQnOmFkaWQsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2VtYWlsJzppZHMsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3Bhc3N3b3JkJzpwYXMsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2NwbCc6J3RydWUnLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdjcmVkZW50aWFsc190eXBlJzonZGV2aWNlX2Jhc2VkX2xvZ2luX3Bhc3N3b3JkJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAic291cmNlIjogImRldmljZV9iYXNlZF9sb2dpbiIsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2Vycm9yX2RldGFpbF90eXBlJzonYnV0dG9uX3dpdGhfZGlzYWJsZWQnLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdzb3VyY2UnOidsb2dpbicsJ2Zvcm1hdCc6J2pzb24nLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdnZW5lcmF0ZV9zZXNzaW9uX2Nvb2tpZXMnOicxJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnZ2VuZXJhdGVfYW5hbHl0aWNzX2NsYWltJzonMScsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2dlbmVyYXRlX21hY2hpbmVfaWQnOicxJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAibG9jYWxlIjoiZXNfQ1UiLCJjbGllbnRfY291bnRyeV9jb2RlIjoiQ1UiLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdkZXZpY2UnOmd0dCwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnZGV2aWNlX2lkJzphZGlkLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJtZXRob2QiOiAiYXV0aC5sb2dpbiIsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImZiX2FwaV9yZXFfZnJpZW5kbHlfbmFtZSI6ICJhdXRoZW50aWNhdGUiLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJmYl9hcGlfY2FsbGVyX2NsYXNzIjogImNvbS5mYWNlYm9vay5hY2NvdW50LmxvZ2luLnByb3RvY29sLkZiNGFBdXRoSGFuZGxlciJ9DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlYWQgPSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2NvbnRlbnQtdHlwZSc6J2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCcsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3gtZmItc2ltLWhuaSc6c3RyKHJhbmRvbS5yYW5kaW50KDJlNCw0ZTQpKSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAneC1mYi1jb25uZWN0aW9uLXR5cGUnOid1bmtub3duJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnQXV0aG9yaXphdGlvbic6J09BdXRoIDM1MDY4NTUzMTcyOHw2MmY4Y2U5Zjc0YjEyZjg0YzEyM2NjMjM0MzdhNGEzMicsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3VzZXItYWdlbnQnOnVhX3N0cmluZywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAneC1mYi1uZXQtaG5pJzpzdHIocmFuZG9tLnJhbmRpbnQoMmU0LDRlNCkpLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICd4LWZiLWNvbm5lY3Rpb24tYmFuZHdpZHRoJzpzdHIocmFuZG9tLnJhbmRpbnQoMmU3LDNlNykpLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICd4LWZiLWNvbm5lY3Rpb24tcXVhbGl0eSc6J0VYQ0VMTEVOVCcsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3gtZmItZnJpZW5kbHktbmFtZSc6J2F1dGhlbnRpY2F0ZScsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2FjY2VwdC1lbmNvZGluZyc6J2d6aXAsIGRlZmxhdGUnLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICd4LWZiLWh0dHAtZW5naW5lJzogICAgICdMaWdlcid9DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVybCA9ICdodHRwczovL2ItZ3JhcGguZmFjZWJvb2suY29tL2F1dGgvbG9naW4/aW5jbHVkZV9oZWFkZXJzPWZhbHNlJmRlY29kZV9ib2R5X2pzb249ZmFsc2Umc3RyZWFtYWJsZV9qc29uX3Jlc3BvbnNlPXRydWUnDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBvID0gcmVxdWVzdHMucG9zdCh1cmwsZGF0YT1kYXRhLGhlYWRlcnM9aGVhZCxhbGxvd19yZWRpcmVjdHM9RmFsc2UpLnRleHQNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcSA9IGpzb24ubG9hZHMocG8pDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICdzZXNzaW9uX2tleScgaW4gcToNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmludChmJ1xyXHJcMDMzWzE7MzJtIFtTT0hBSUwtT0tdICcraWRzKycgfCAnK3BhcysnXDAzM1sxOzk3bScpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3BlbihmJy9zZGNhcmQvU09IQUlMLU9LLnR4dCcsJ2EnKS53cml0ZShpZHMrJ3wnK3BhcysnXG4nKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICNjZWtfYXBrKHNlc3Npb24sY29raSkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBva3MuYXBwZW5kKGlkcykNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbGlmICd3d3cuZmFjZWJvb2suY29tJyBpbiBxWydlcnJvciddWydtZXNzYWdlJ106DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgJ3knIGluIHBjcDoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByaW50KGYnXHJcclx4MWJbMzg7NTsxMjZtIFtTT0hBSUwtQ1BdICcraWRzKycgfCAnK3BhcysnXDAzM1sxOzk3bScpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcGVuKGYnL3NkY2FyZC9TT0hBSUwtQ1AudHh0JywgJ2EnKS53cml0ZShpZHMrJ3wnK3BhcysnXG4nKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3BzLmFwcGVuZChpZHMpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2U6DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcGVuKGYnL3NkY2FyZC9TT0hBSUwtQ1AudHh0JywnYScpLndyaXRlKGlkcysnfCcrcGFzKydcbicpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlOg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlDQogICAgICAgICAgICAgICAgICAgICAgICBsb29wKz0xDQogICAgICAgICAgICAgICAgZXhjZXB0IHJlcXVlc3RzLmV4Y2VwdGlvbnMuQ29ubmVjdGlvbkVycm9yOg0KICAgICAgICAgICAgICAgICAgICAgICAgdGltZS5zbGVlcCgxMCkNCiAgICAgICAgICAgICAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6DQogICAgICAgICAgICAgICAgICAgICAgICBwYXNzDQpkZWYgZmZiNyhpZHMsbmFtZXMscGFzc2xpc3QpOg0KICAgICAgICBnbG9iYWwgbG9vcCxva3MsY3BzDQogICAgICAgIHN5cy5zdGRvdXQud3JpdGUoZidcclxyXDAzM1sxOzM3bSBbU09IQUlMMXgxLVZJUF0gJXN8XDAzM1sxOzMybU9LOi0lcyBcMDMzWzE7MzdtJyUobG9vcCxsZW4ob2tzKSkpO3N5cy5zdGRvdXQuZmx1c2goKQ0KICAgICAgICBzZXNzaW9uID0gcmVxdWVzdHMuU2Vzc2lvbigpDQogICAgICAgIHRyeToNCiAgICAgICAgICAgICAgICBmaXJzdCA9IG5hbWVzLnNwbGl0KGYnICcpWzBdDQogICAgICAgICAgICAgICAgdHJ5Og0KICAgICAgICAgICAgICAgICAgICAgICAgbGFzdCA9IG5hbWVzLnNwbGl0KGYnICcpWzFdDQogICAgICAgICAgICAgICAgZXhjZXB0Og0KICAgICAgICAgICAgICAgICAgICAgICAgbGFzdCA9ICdBaG1lZCcNCiAgICAgICAgICAgICAgICBwcyA9IGZpcnN0Lmxvd2VyKCkNCiAgICAgICAgICAgICAgICBwczIgPSBsYXN0Lmxvd2VyKCkNCiAgICAgICAgICAgICAgICBmb3IgZmlrciBpbiBwYXNzbGlzdDoNCiAgICAgICAgICAgICAgICAgICAgICAgIHBhcyA9IGZpa3IucmVwbGFjZShmJ0ZpcnN0JyxmaXJzdCkucmVwbGFjZShmJ0xhc3QnLGxhc3QpLnJlcGxhY2UoZidmaXJzdCcscHMpLnJlcGxhY2UoZidsYXN0JyxwczIpDQogICAgICAgICAgICAgICAgICAgICAgICB1YT1yYW5kb20uY2hvaWNlKHVnZW4pDQogICAgICAgICAgICAgICAgICAgICAgICBoZWFkID0geydIb3N0JzogJ21vYmlsZS5mYWNlYm9vay5jb20nLCAndmlld3BvcnQtd2lkdGgnOiAnOTgwJywgJ3NlYy1jaC11YSc6ICciIE5vdCBBO0JyYW5kIjt2PSI5OSIsICJDaHJvbWl1bSI7dj0iMTAwIiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjEwMCInLCAnc2VjLWNoLXVhLW1vYmlsZSc6ICc/MScsICdzZWMtY2gtdWEtcGxhdGZvcm0nOiciQW5kcm9pZCInLCAnc2VjLWNoLXByZWZlcnMtY29sb3Itc2NoZW1lJzogJ2xpZ2h0JywgJ2RudCc6ICcxJywgJ3VwZ3JhZGUtaW5zZWN1cmUtcmVxdWVzdHMnOiAnMScsICd1c2VyLWFnZW50JzogdWEsICdhY2NlcHQnOiAndGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKltpbnNlcnRlZCBieSBjeXRob24gdG8gYXZvaWQgY29tbWVudCBjbG9zZXJdL1tpbnNlcnRlZCBieSBjeXRob24gdG8gYXZvaWQgY29tbWVudCBzdGFydF0qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC45JywgJ3NlYy1mZXRjaC1zaXRlJzogJ25vbmUnLCAnc2VjLWZldGNoLW1vZGUnOiAnbmF2aWdhdGUnLCAnc2VjLWZldGNoLXVzZXInOiAnPzEnLCAnc2VjLWZldGNoLWRlc3QnOiAnZG9jdW1lbnQnLCAnYWNjZXB0LWVuY29kaW5nJzogJ2d6aXAsIGRlZmxhdGUsIGJyJywgJ2FjY2VwdC1sYW5ndWFnZSc6ICdlbi1VUyxlbjtxPTAuOSd9DQogICAgICAgICAgICAgICAgICAgICAgICBnZXRsb2cgPSBzZXNzaW9uLmdldChmJ2h0dHBzOi8vbW9iaWxlLmZhY2Vib29rLmNvbS9sb2dpbi9kZXZpY2UtYmFzZWQvcGFzc3dvcmQvP3VpZD17aWRzfSZmbG93PWxvZ2luX25vX3BpbiZyZWZzcmM9ZGVwcmVjYXRlZCZfcmRyJykNCiAgICAgICAgICAgICAgICAgICAgICAgIGlkcGFzcyA9eyJsc2QiOnJlLnNlYXJjaChmJ25hbWU9ImxzZCIgdmFsdWU9IiguKj8pIicsIHN0cihnZXRsb2cudGV4dCkpLmdyb3VwKDEpLCJqYXpvZXN0IjpyZS5zZWFyY2goZiduYW1lPSJqYXpvZXN0IiB2YWx1ZT0iKC4qPykiJywgc3RyKGdldGxvZy50ZXh0KSkuZ3JvdXAoMSksInVpZCI6aWRzLCJuZXh0IjoiaHR0cHM6Ly9tYmFzaWMuZmFjZWJvb2suY29tL2xvZ2luL3NhdmUtZGV2aWNlLyIsImZsb3ciOiJsb2dpbl9ub19waW4iLCJwYXNzIjpwYXMsfQ0KICAgICAgICAgICAgICAgICAgICAgICAgY29tcGxldGUgPSBzZXNzaW9uLnBvc3QoZidodHRwczovL21vYmlsZS5mYWNlYm9vay5jb20vbG9naW4vZGV2aWNlLWJhc2VkL3ZhbGlkYXRlLXBhc3N3b3JkLz9zaGJsPTAnLGRhdGE9aWRwYXNzLGFsbG93X3JlZGlyZWN0cz1GYWxzZSxoZWFkZXJzPWhlYWQpDQogICAgICAgICAgICAgICAgICAgICAgICBTaGFoaW49c2Vzc2lvbi5jb29raWVzLmdldF9kaWN0KCkua2V5cygpDQogICAgICAgICAgICAgICAgICAgICAgICBpZiAiY191c2VyIiBpbiBTaGFoaW46DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNva2k9c2Vzc2lvbi5jb29raWVzLmdldF9kaWN0KCkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAga3VraSA9IChmIjsiKS5qb2luKFsgIiVzPSVzIiAlIChrZXksIHZhbHVlKSBmb3Iga2V5LCB2YWx1ZSBpbiBzZXNzaW9uLmNvb2tpZXMuZ2V0X2RpY3QoKS5pdGVtcygpIF0pDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByaW50KGYnXHJcclwwMzNbMTszMm0gW1NPSEFJTC1PS10gJXMgfCAlcyclKGlkcyxwYXMpKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcGVuKGYnL3NkY2FyZC9TT0hBSUwtT0sudHh0JywgJ2EnKS53cml0ZShpZHMrJ3wnK3BhcysnXG4nKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAjY2VrX2FwayhzZXNzaW9uLGNva2kpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9rcy5hcHBlbmQoaWRzKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaw0KICAgICAgICAgICAgICAgICAgICAgICAgZWxpZiAnY2hlY2twb2ludCcgaW4gU2hhaGluOg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAneScgaW4gcGNwOg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByaW50KGYnXHJcclx4MWJbMzg7NTsxMjZtIFtTT0hBSUwtQ1BdICcraWRzKycgfCAnK3BhcysnXDAzM1sxOzk3bScpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3BlbihmJy9zZGNhcmQvU09IQUlMLUNQLnR4dCcsICdhJykud3JpdGUoaWRzKyd8JytwYXMrJ1xuJykNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjcHMuYXBwZW5kKGlkcykNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlOg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrDQogICAgICAgICAgICAgICAgICAgICAgICBlbHNlOg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZQ0KICAgICAgICBleGNlcHQgcmVxdWVzdHMuZXhjZXB0aW9ucy5Db25uZWN0aW9uRXJyb3I6DQogICAgICAgICAgICAgICAgdGltZS5zbGVlcCgyMCkNCiAgICAgICAgbG9vcCs9MQ0KeHh4eHg9KGYiR1QtMTAxNSIsIkdULTEwMjAiLCJHVC0xMDMwIiwiR1QtMTAzNSIsIkdULTEwNDAiLCJHVC0xMDQ1IiwiR1QtMTA1MCIsIkdULTEyNDAiLCJHVC0xNDQwIiwiR1QtMTQ1MCIsIkdULTE4MTkwIiwiR1QtMTgyNjIiLCJHVC0xOTA2MEkiLCJHVC0xOTA4MiIsIkdULTE5MDgzIiwiR1QtMTkxMDUiLCJHVC0xOTE1MiIsIkdULTE5MTkyIiwiR1QtMTkzMDAiLCJHVC0xOTUwNSIsIkdULTIwMDAiLCJHVC0yMDAwMCIsIkdULTIwMHMiLCJHVC0zMDAwIiwiR1QtNDE0WE9QIiwiR1QtNjkxOCIsIkdULTcwMTAiLCJHVC03MDIwIiwiR1QtNzAzMCIsIkdULTcwNDAiLCJHVC03MDUwIiwiR1QtNzEwMCIsIkdULTcxMDUiLCJHVC03MTEwIiwiR1QtNzIwNSIsIkdULTcyMTAiLCJHVC03MjQwUiIsIkdULTcyNDUiLCJHVC03MzAzIiwiR1QtNzMxMCIsIkdULTczMjAiLCJHVC03MzI1IiwiR1QtNzMyNiIsIkdULTczNDAiLCJHVC03NDA1IiwiR1QtNzU1MCA1R1QtODAwNSIsIkdULTgwMTAiLCJHVC04MSIsIkdULTgxMCIsIkdULTgxMDUiLCJHVC04MTEwIiwiR1QtODIyMFMiLCJHVC04NDEwIiwiR1QtOTMwMCIsIkdULTkzMjAiLCJHVC05M0ciLCJHVC1BNzEwMCIsIkdULUE5NTAwIiwiR1QtQU5EUk9JRCIsIkdULUIyNzEwIiwiR1QtQjUzMzAiLCJHVC1CNTMzMEIiLCJHVC1CNTMzMEwiLCJHVC1CNTMzMFpLQUlOVSIsIkdULUI1NTEwIiwiR1QtQjU1MTIiLCJHVC1CNTcyMiIsIkdULUI3NTEwIiwiR1QtQjc3MjIiLCJHVC1CNzgxMCIsIkdULUI5MTUwIiwiR1QtQjkzODgiLCJHVC1DMzAxMCIsIkdULUMzMjYyIiwiR1QtQzMzMTBSIiwiR1QtQzMzMTIiLCJHVC1DMzMxMlIiLCJHVC1DMzMxM1QiLCJHVC1DMzMyMiIsIkdULUMzMzIyaSIsIkdULUMzNTIwIiwiR1QtQzM1MjBJIiwiR1QtQzM1OTIiLCJHVC1DMzU5NSIsIkdULUMzNzgyIiwiR1QtQzY3MTIiLCJHVC1FMTI4MlQiLCJHVC1FMTUwMCIsIkdULUUyMjAwIiwiR1QtRTIyMDIiLCJHVC1FMjI1MCIsIkdULUUyMjUyIiwiR1QtRTI2MDAiLCJHVC1FMjY1MlciLCJHVC1FMzIxMCIsIkdULUUzMzA5IiwiR1QtRTMzMDlJIiwiR1QtRTMzMDlUIiwiR1QtRzUzMEgiLCJHVC1HOTMwRiIsIkdULUg5NTAwIiwiR1QtSTU1MDgiLCJHVC1JNTgwMSIsIkdULUk2NDEwIiwiR1QtSTgxNTAiLCJHVC1JODE2ME9LTFRQQSIsIkdULUk4MTYwWldMVFRUIiwiR1QtSTgyNTgiLCJHVC1JODI2MkQiLCJHVC1JODI2OCIiR1QtSTg1MDUiLCJHVC1JODUzMEJBQUJUVSIsIkdULUk4NTMwQkFMQ0hPIiwiR1QtSTg1MzBCQUxUVFQiLCJHVC1JODU1MEUiLCJHVC1JODc1MCIsIkdULUk5MDAiLCJHVC1JOTAwOEwiLCJHVC1JOTA4MEUiLCJHVC1JOTA4MkMiLCJHVC1JOTA4MkVXQUlOVSIsIkdULUk5MDgyaSIsIkdULUk5MTAwRyIsIkdULUk5MTAwTEtMQ0hUIiwiR1QtSTkxMDBNIiwiR1QtSTkxMDBQIiwiR1QtSTkxMDBUIiwiR1QtSTkxMDVVQU5EQlQiLCJHVC1JOTEyOEUiLCJHVC1JOTEyOEkiLCJHVC1JOTEyOFYiLCJHVC1JOTE1OFAiLCJHVC1JOTE1OFYiLCJHVC1JOTE2OEkiLCJHVC1JOTE5MCIsIkdULUk5MTkyIiwiR1QtSTkxOTJJIiwiR1QtSTkxOTVIIiwiR1QtSTkxOTVMIiwiR1QtSTkyNTAiLCJHVC1JOTMwMCIsIkdULUk5MzAwSSIsIkdULUk5MzAxSSIsIkdULUk5MzAzSSIsIkdULUk5MzA1TiIsIkdULUk5MzA4SSIsIkdULUk5NTAwIiwiR1QtSTk1MDVHIiwiR1QtSTk1MDVYIiwiR1QtSTk1MDdWIiwiR1QtSTk2MDAiLCJHVC1NNTY1MCIsIkdULU41MDAwUyIsIkdULU41MTAwIiwiR1QtTjUxMDUiLCJHVC1ONTExMCIsIkdULU41MTIwIiwiR1QtTjcwMDBCIiwiR1QtTjcwMDUiLCJHVC1ONzEwMCIsIkdULU43MTAwVCIsIkdULU43MTAyIiwiR1QtTjcxMDUiLCJHVC1ONzEwNVQiLCJHVC1ONzEwOCIsIkdULU43MTA4RCIsIkdULU44MDAwIiwiR1QtTjgwMDUiLCJHVC1OODAxMCIsIkdULU44MDIwIiwiR1QtTjkwMDAiLCJHVC1OOTUwNSIsIkdULVAxMDAwQ1dBWFNBIiwiR1QtUDEwMDBNIiwiR1QtUDEwMDBUIiwiR1QtUDEwMTAiLCJHVC1QMzEwMEIiLCJHVC1QMzEwNSIsIkdULVAzMTA4IiwiR1QtUDMxMTAiLCJHVC1QNTEwMCIsIkdULVA1MTEwIiwiR1QtUDUyMDAiLCJHVC1QNTIxMCIsIkdULVA1MjEwWEQxIiwiR1QtUDUyMjAiLCJHVC1QNjIwMCIsIkdULVA2MjAwTCIsIkdULVA2MjAxIiwiR1QtUDYyMTAiLCJHVC1QNjIxMSIsIkdULVA2ODAwIiwiR1QtUDcxMDAiLCJHVC1QNzMwMCIsIkdULVA3MzAwQiIsIkdULVA3MzEwIiwiR1QtUDczMjAiLCJHVC1QNzUwMEQiLCJHVC1QNzUwME0iLCJTQU1TVU5HIiwiTE1ZNCIsIkxNWTQ3ViIsIk1NQjI5SyIsIk1NQjI5TSIsIkxSWDIyQyIsIkxSWDIyRyIsIk5NRjIiLCJOTUYyNlgiLCJOTUYyNlg7IiwiTlJEOTBNIiwiTlJEOTBNOyIsIlNQSC1MNzIwIiwiSU1MNzRLIiwiSU1NNzZEIiwiSkRRMzkiLCJKU1MxNUoiLCJKWk81NEsiLCJLT1Q0IiwiS09UNDlIIiwiS09UNFNNLVQzMTAiLCJLVFU4NFAiLCJTTS1BNTAwRiIsIlNNLUE1MDBGVSIsIlNNLUE1MDBIIiwiU00tRzUzMkYiLCJTTS1HOTAwRiIsIlNNLUc5MjBGIiwiU00tRzkzMEYiLCJTTS1HOTM1IiwiU00tRzk1MEYiLCJTTS1KMzIwRiIsIlNNLUozMjBGTiIsIlNNLUozMjBIIiwiU00tSjMyME0iLCJTTS1KNTEwRk4iLCJTTS1KNzAxRiIsIlNNLU45MjBTIiwiU00tVDExMSIsIlNNLVQyMzAiLCJTTS1UMjMxIiwiU00tVDIzNSIsIlNNLVQyODAiLCJTTS1UMzExIiwiU00tVDMxNSIsIlNNLVQ1MjUiLCJTTS1UNTMxIiwiU00tVDUzNSIsIlNNLVQ1NTUiLCJTTS1UNTYxIiwiU00tVDcwNSIsIlNNLVQ4MDUiLCJTTS1UODIwIikNCiMNCmRlZiBiZCgpOg0KICAgICAgICAgICAgICAgIHVzZXI9W10NCiAgICAgICAgICAgICAgICBwY3A9W10NCiAgICAgICAgICAgICAgICBjbGVhcigpDQogICAgICAgICAgICAgICAgcGNwLmFwcGVuZChmJ3knKQ0KICAgICAgICAgICAgICAgIHByaW50KCdcMDMzWzE7MzJtIENvZGUgZXhhbXBsZTogMDE2LDAxNywwMTgsMDE5JykNCiAgICAgICAgICAgICAgICBjb2RlID0gaW5wdXQoJ1wwMzNbMTszN20gcHV0IGNvZGU6ICcpDQogICAgICAgICAgICAgICAgdHJ5Og0KICAgICAgICAgICAgICAgICAgICAgICAgbGltaXQgPSBpbnQoaW5wdXQoJ1wwMzNbMTszMm0gZXhhbXBsZTogMjAwMCwgMzAwMCwgNTAwMCwgMTAwMDBcblwwMzNbMTszN20gcHV0IGxpbWl0OiAnKSkNCiAgICAgICAgICAgICAgICBleGNlcHQgVmFsdWVFcnJvcjoNCiAgICAgICAgICAgICAgICAgICAgICAgIGxpbWl0ID0gNTAwMA0KICAgICAgICAgICAgICAgIGZvciBubWJyIGluIHJhbmdlKGxpbWl0KToNCiAgICAgICAgICAgICAgICAgICAgICAgIG5tcCA9ICcnLmpvaW4ocmFuZG9tLmNob2ljZShzdHJpbmcuZGlnaXRzKSBmb3IgXyBpbiByYW5nZSg4KSkNCiAgICAgICAgICAgICAgICAgICAgICAgIHVzZXIuYXBwZW5kKG5tcCkNCiAgICAgICAgICAgICAgICB3aXRoIHRyZWQobWF4X3dvcmtlcnM9MzApIGFzIHNhdDogICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgY2xlYXIoKQ0KICAgICAgICAgICAgICAgICAgICAgICAgdGwgPSBzdHIobGVuKHVzZXIpKQ0KICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQoJyBUb3RhbCBhY2NvdW50IDogXDAzM1sxOzMybScrdGwpDQogICAgICAgICAgICAgICAgICAgICAgICBwcmludChmJ1wwMzNbMTszN20gQ2hvaWNlIGNvZGUgLi46XDAzM1sxOzMybSAnK2NvZGUpDQogICAgICAgICAgICAgICAgICAgICAgICBwcmludChmJ1wwMzNbMTszMm0gUmFuZG9tIFRlc3RpbmcgVmVyc2lvbiAuLi4uLiAnKQ0KICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQoZidcMDMzWzE7MzdtIFx4MWJbMzg7NTsxMjZtIFByb3Nlc3Mgc3RhcnRlZFwwMzNbMTs5N20nKQ0KICAgICAgICAgICAgICAgICAgICAgICAgbGluZXgoKQ0KICAgICAgICAgICAgICAgICAgICAgICAgZm9yIHBzeCBpbiB1c2VyOg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZHMgPSBjb2RlK3BzeA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXNzbGlzdCA9IFtwc3gsaWRzLCdiYW5nbGFkZXNoJywnaSBsb3ZlIHlvdScsJ0AjQCNAIycsJzEyMzg5MCddDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNhdC5zdWJtaXQoYXBpeCxpZHMscGFzc2xpc3QpDQogICAgICAgICAgICAgICAgcHJpbnQoJ1wwMzNbMTszN20nKQ0KICAgICAgICAgICAgICAgIGxpbmV4KCkNCiAgICAgICAgICAgICAgICBwcmludCgnIFRoZSBwcm9jZXNzIGhhcyBjb21wbGV0ZWQnKQ0KICAgICAgICAgICAgICAgIHByaW50KCcgVG90YWwgT0svQ1A6ICcrc3RyKGxlbihva3MpKSsnLycrc3RyKGxlbihjcHMpKSkNCg0KZGVmIGdtbCgpOg0KICAgICAgICAgICAgICAgIHVzZXI9W10NCiAgICAgICAgICAgICAgICBwY3A9W10NCiAgICAgICAgICAgICAgICBjbGVhcigpDQogICAgICAgICAgICAgICAgcGNwLmFwcGVuZChmJ3knKQ0KICAgICAgICAgICAgICAgIHByaW50KCdcMDMzWzE7MzJtIE5hbWUgIGV4YW1wbGU6ICBTaGFoaW4sIFNhYmJpciwgRm9yaGFkICcpDQogICAgICAgICAgICAgICAgY29kZSA9IGlucHV0KCcgRmlyc3QgbmFtZSA6ICcpDQogICAgICAgICAgICAgICAgcHJpbnQoJyBOYW1lIEV4YW1wbGUgOiBBbGFtLCBob3NzZW4sIGhvc3NhaW4nKQ0KICAgICAgICAgICAgICAgIGNvZGV4ID0gaW5wdXQoJyBMYXN0IG5hbWUgOiAnKQ0KICAgICAgICAgICAgICAgIHRyeToNCiAgICAgICAgICAgICAgICAgICAgICAgIGxpbWl0ID0gaW50KGlucHV0KCdcMDMzWzE7MzJtIGV4YW1wbGU6IDIwMDAsIDMwMDAsIDUwMDAsIDEwMDAwXG5cMDMzWzE7MzdtIHB1dCBsaW1pdDogJykpDQogICAgICAgICAgICAgICAgZXhjZXB0IFZhbHVlRXJyb3I6DQogICAgICAgICAgICAgICAgICAgICAgICBsaW1pdCA9IDUwMDANCiAgICAgICAgICAgICAgICBmb3Igbm1iciBpbiByYW5nZShsaW1pdCk6DQogICAgICAgICAgICAgICAgICAgICAgICBubXAgPSAnJy5qb2luKHJhbmRvbS5jaG9pY2Uoc3RyaW5nLmRpZ2l0cykgZm9yIF8gaW4gcmFuZ2UoMiw1KSkNCiAgICAgICAgICAgICAgICAgICAgICAgIHVzZXIuYXBwZW5kKG5tcCkNCiAgICAgICAgICAgICAgICB3aXRoIHRyZWQobWF4X3dvcmtlcnM9MzApIGFzIHNhdDogICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgY2xlYXIoKQ0KICAgICAgICAgICAgICAgICAgICAgICAgdGwgPSBzdHIobGVuKHVzZXIpKQ0KICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQoJyBUb3RhbCBhY2NvdW50IDogXDAzM1sxOzMybScrdGwpDQogICAgICAgICAgICAgICAgICAgICAgICBwcmludChmJ1wwMzNbMTszN20gQ2hvaWNlIGNvZGUgLi46XDAzM1sxOzMybSAnK2NvZGUpDQogICAgICAgICAgICAgICAgICAgICAgICBwcmludChmJ1wwMzNbMTszMm0gUmFuZG9tIFRlc3RpbmcgVmVyc2lvbiAuLi4uLiAnKQ0KICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQoZidcMDMzWzE7MzdtIFx4MWJbMzg7NTsxMjZtIFByb3Nlc3Mgc3RhcnRlZFwwMzNbMTs5N20nKQ0KICAgICAgICAgICAgICAgICAgICAgICAgbGluZXgoKQ0KICAgICAgICAgICAgICAgICAgICAgICAgZm9yIHBzeCBpbiB1c2VyOg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZHMgPSBjb2RlK2NvZGV4K3BzeA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXNzbGlzdCA9IFtjb2RlLGNvZGV4LGNvZGUrY29kZXgsY29kZSsnICcrY29kZXgsY29kZSsnMTIzJyxjb2RlKycxMjM0Jyxjb2RlKycxMjM0NScsJ0AjQCNAIycsJzEyMzg5MCddDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNhdC5zdWJtaXQoYXBpeCxpZHMscGFzc2xpc3QpDQogICAgICAgICAgICAgICAgcHJpbnQoJ1wwMzNbMTszN20nKQ0KICAgICAgICAgICAgICAgIGxpbmV4KCkNCiAgICAgICAgICAgICAgICBwcmludCgnIFRoZSBwcm9jZXNzIGhhcyBjb21wbGV0ZWQnKQ0KICAgICAgICAgICAgICAgIHByaW50KCcgVG90YWwgT0svQ1A6ICcrc3RyKGxlbihva3MpKSsnLycrc3RyKGxlbihjcHMpKSkNCg0KDQoNCg0KDQpkZWYgcmNyYWNrX2ZyZWUoaWRmLHB3dik6DQoJI3ByaW50KHVzZXIpDQoJZ2xvYmFsIGxvb3ANCglnbG9iYWwgY3BzDQoJZ2xvYmFsIG9rcw0KCWdsb2JhbCBhZ2VudHMNCgl0cnk6DQoJCWZvciBwcyBpbiBwd3Y6DQoJIwkJcHJpbnQoaWRmKyd8JytwcykNCgkJCSNzZXNzaW9uID0gcmVxdWVzdHMuU2Vzc2lvbigpDQoJCQlzeXMuc3Rkb3V0LndyaXRlKGYnXHJcclwwMzNbMTszN20gW1NPSEFJTDF4MS1WSVBdICVzfFwwMzNbMTszMm1PSzotJXMgXDAzM1sxOzM3bSclKGxvb3AsbGVuKG9rcykpKTtzeXMuc3Rkb3V0LmZsdXNoKCkNCgkJCXNlc3Npb24gPSByZXF1ZXN0cy5TZXNzaW9uKCkNCgkJCXBybyA9IHJhbmRvbS5jaG9pY2UodXNlcmFnZW50KQ0KCQkJZnJlZV9mYiA9IHNlc3Npb24uZ2V0KCdodHRwczovL20uYWxwaGEuZmFjZWJvb2suY29tJykudGV4dA0KCQkJbG9nX2RhdGEgPSB7DQoJCQkJImxzZCI6cmUuc2VhcmNoKCduYW1lPSJsc2QiIHZhbHVlPSIoLio/KSInLCBzdHIoZnJlZV9mYikpLmdyb3VwKDEpLA0KCQkJImphem9lc3QiOnJlLnNlYXJjaCgnbmFtZT0iamF6b2VzdCIgdmFsdWU9IiguKj8pIicsIHN0cihmcmVlX2ZiKSkuZ3JvdXAoMSksDQoJCQkibV90cyI6cmUuc2VhcmNoKCduYW1lPSJtX3RzIiB2YWx1ZT0iKC4qPykiJywgc3RyKGZyZWVfZmIpKS5ncm91cCgxKSwNCgkJCSJsaSI6cmUuc2VhcmNoKCduYW1lPSJsaSIgdmFsdWU9IiguKj8pIicsIHN0cihmcmVlX2ZiKSkuZ3JvdXAoMSksDQoJCQkidHJ5X251bWJlciI6IjAiLA0KCQkJInVucmVjb2duaXplZF90cmllcyI6IjAiLA0KCQkJImVtYWlsIjppZGYsDQoJCQkicGFzcyI6cHMsDQoJCQkibG9naW4iOiJMb2cgSW4ifQ0KCQkJaGVhZGVyX2ZyZWVmYiA9IHsgJ09yaWdpbic6ICdodHRwOi8vZmlkZGxlLmpzaGVsbC5uZXQnLA0KICAgICdBY2NlcHQtRW5jb2RpbmcnOiAnZ3ppcCwgZGVmbGF0ZScsDQogICAgJ0FjY2VwdC1MYW5ndWFnZSc6ICdlbi1VUyxlbjtxPTAuOCcsDQogICAgJ1VzZXItQWdlbnQnOiAnTW96aWxsYS81LjAgKE1hY2ludG9zaDsgSW50ZWwgTWFjIE9TIFggMTBfMTBfMSkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzM5LjAuMjE3MS45NSBTYWZhcmkvNTM3LjM2JywNCiAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDsgY2hhcnNldD1VVEYtOCcsDQogICAgJ0FjY2VwdCc6ICcqLyonLA0KICAgICdSZWZlcmVyJzogJ2h0dHA6Ly9maWRkbGUuanNoZWxsLm5ldC9fZGlzcGxheS8nLA0KICAgICdYLVJlcXVlc3RlZC1XaXRoJzogJ1hNTEh0dHBSZXF1ZXN0JywNCiAgICAnQ29ubmVjdGlvbic6ICdrZWVwLWFsaXZlJyx9DQoJCQlsbyA9IHNlc3Npb24ucG9zdCgnaHR0cDovL2ZpZGRsZS5qc2hlbGwubmV0L2VjaG8vaHRtbC8nLGRhdGE9bG9nX2RhdGEsaGVhZGVycz1oZWFkZXJfZnJlZWZiKS50ZXh0DQoJCQlsb2dfY29va2llcz1zZXNzaW9uLmNvb2tpZXMuZ2V0X2RpY3QoKS5rZXlzKCkNCgkJCSNwcmludChpaWQrJ3wnK3B3cysnfCcrc3RyKGxvZ19jb29raWVzKSkNCgkJCWlmICdjX3VzZXInIGluIGxvZ19jb29raWVzOg0KCQkJCWNva2k9IjsiLmpvaW4oW2tleSsiPSIrdmFsdWUgZm9yIGtleSx2YWx1ZSBpbiBzZXNzaW9uLmNvb2tpZXMuZ2V0X2RpY3QoKS5pdGVtcygpXSkNCgkJCQljaWQgPSBjb2tpWzE1MToxNjZdDQoJCQkJcHJpbnQoJ1xuJykNCgkJCQlwcmludCgnXDAzM1sxOzkybVtTT0hBSUwtT0tdICcraWRmKycgfCAnK3BzKydcMDMzWzA7OTdtJykNCgkJCQljZWtfYXBrKGNva2kpDQoJCQkJb3Blbignb2sudHh0JywgJ2EnKS53cml0ZShpZGYrJyB8ICcrcHMrJ1xuJykNCgkJCQlva3MuYXBwZW5kKGlkZikNCgkJCQlicmVhaw0KCQkJZWxpZiAnY2hlY2twb2ludCcgaW4gbG9nX2Nvb2tpZXM6DQoJCQkJY29raT0iOyIuam9pbihba2V5KyI9Iit2YWx1ZSBmb3Iga2V5LHZhbHVlIGluIHNlc3Npb24uY29va2llcy5nZXRfZGljdCgpLml0ZW1zKCldKQ0KCQkJCWNpZCA9IGNva2lbMTQxOjE1Nl0NCgkJCQlwcmludCgnXG4nKQ0KCQkJCXByaW50KCdcMDMzWzE7OTFtW1NPSEFJTC1DUF0gJytpZGYrJyB8ICcrcHMrJ1wwMzNbMDs5N20nKQ0KCQkJCW9wZW4oJ2NwLnR4dCcsICdhJykud3JpdGUoaWRmKycgfCAnK3BzKydcbicpDQoJCQkJY3BzLmFwcGVuZChpZGYpDQoJCQkJYnJlYWsNCgkJCWVsc2U6DQoJCQkJY29udGludWUNCgkJbG9vcCs9MQ0KCQlibyA9IHJhbmRvbS5jaG9pY2UoW20sayxoLGIsdSx4XSkNCgkJc3lzLnN0ZG91dC53cml0ZShmJ1xyXHJcMDMzWzE7MzdtIFtTT0hBSUwxeDEtVklQXSAlc3xcMDMzWzE7MzJtT0s6LSVzIFwwMzNbMTszN20nJShsb29wLGxlbihva3MpKSk7c3lzLnN0ZG91dC5mbHVzaCgpDQoJCXN5cy5zdGRvdXQuZmx1c2goKQ0KCQ0KCWV4Y2VwdDoNCgkJcGFzcw0KZGVmIGFwaXgoaWRzLHBhc3NsaXN0KToNCiAgICAgICAgICAgICAgICB0cnk6DQogICAgICAgICAgICAgICAgICAgICAgICBnbG9iYWwgb2ssbG9vcA0KICAgICAgICAgICAgICAgICAgICAgICAgc3lzLnN0ZG91dC53cml0ZShmJ1xyXHJcMDMzWzE7MzdtIFtTT0hBSUwxeDFdICVzfFwwMzNbMTszMm1PSzotJXMgXDAzM1sxOzM3bSclKGxvb3AsbGVuKG9rcykpKTtzeXMuc3Rkb3V0LmZsdXNoKCkNCiAgICAgICAgICAgICAgICAgICAgICAgIGZvciBwYXMgaW4gcGFzc2xpc3Q6DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFwcGxpY2F0aW9uX3ZlcnNpb24gPSBzdHIocmFuZG9tLnJhbmRpbnQoMTExLDU1NSkpKycuMC4wLicrc3RyKHJhbmRvbS5yYW5kcmFuZ2UoOSw0OSkpK3N0cihyYW5kb20ucmFuZGludCgxMTEsNTU1KSkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXBwbGljYXRpb25fdmVyc2lvbl9jb2RlPXN0cihyYW5kb20ucmFuZGludCgwMDAwMDAwMDAsOTk5OTk5OTk5KSkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmJzPXJhbmRvbS5jaG9pY2UoZmJrcykNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeHh4eHg9KGYiR1QtMTAxNSIsIkdULTEwMjAiLCJHVC0xMDMwIiwiR1QtMTAzNSIsIkdULTEwNDAiLCJHVC0xMDQ1IiwiR1QtMTA1MCIsIkdULTEyNDAiLCJHVC0xNDQwIiwiR1QtMTQ1MCIsIkdULTE4MTkwIiwiR1QtMTgyNjIiLCJHVC0xOTA2MEkiLCJHVC0xOTA4MiIsIkdULTE5MDgzIiwiR1QtMTkxMDUiLCJHVC0xOTE1MiIsIkdULTE5MTkyIiwiR1QtMTkzMDAiLCJHVC0xOTUwNSIsIkdULTIwMDAiLCJHVC0yMDAwMCIsIkdULTIwMHMiLCJHVC0zMDAwIiwiR1QtNDE0WE9QIiwiR1QtNjkxOCIsIkdULTcwMTAiLCJHVC03MDIwIiwiR1QtNzAzMCIsIkdULTcwNDAiLCJHVC03MDUwIiwiR1QtNzEwMCIsIkdULTcxMDUiLCJHVC03MTEwIiwiR1QtNzIwNSIsIkdULTcyMTAiLCJHVC03MjQwUiIsIkdULTcyNDUiLCJHVC03MzAzIiwiR1QtNzMxMCIsIkdULTczMjAiLCJHVC03MzI1IiwiR1QtNzMyNiIsIkdULTczNDAiLCJHVC03NDA1IiwiR1QtNzU1MCA1R1QtODAwNSIsIkdULTgwMTAiLCJHVC04MSIsIkdULTgxMCIsIkdULTgxMDUiLCJHVC04MTEwIiwiR1QtODIyMFMiLCJHVC04NDEwIiwiR1QtOTMwMCIsIkdULTkzMjAiLCJHVC05M0ciLCJHVC1BNzEwMCIsIkdULUE5NTAwIiwiR1QtQU5EUk9JRCIsIkdULUIyNzEwIiwiR1QtQjUzMzAiLCJHVC1CNTMzMEIiLCJHVC1CNTMzMEwiLCJHVC1CNTMzMFpLQUlOVSIsIkdULUI1NTEwIiwiR1QtQjU1MTIiLCJHVC1CNTcyMiIsIkdULUI3NTEwIiwiR1QtQjc3MjIiLCJHVC1CNzgxMCIsIkdULUI5MTUwIiwiR1QtQjkzODgiLCJHVC1DMzAxMCIsIkdULUMzMjYyIiwiR1QtQzMzMTBSIiwiR1QtQzMzMTIiLCJHVC1DMzMxMlIiLCJHVC1DMzMxM1QiLCJHVC1DMzMyMiIsIkdULUMzMzIyaSIsIkdULUMzNTIwIiwiR1QtQzM1MjBJIiwiR1QtQzM1OTIiLCJHVC1DMzU5NSIsIkdULUMzNzgyIiwiR1QtQzY3MTIiLCJHVC1FMTI4MlQiLCJHVC1FMTUwMCIsIkdULUUyMjAwIiwiR1QtRTIyMDIiLCJHVC1FMjI1MCIsIkdULUUyMjUyIiwiR1QtRTI2MDAiLCJHVC1FMjY1MlciLCJHVC1FMzIxMCIsIkdULUUzMzA5IiwiR1QtRTMzMDlJIiwiR1QtRTMzMDlUIiwiR1QtRzUzMEgiLCJHVC1HOTMwRiIsIkdULUg5NTAwIiwiR1QtSTU1MDgiLCJHVC1JNTgwMSIsIkdULUk2NDEwIiwiR1QtSTgxNTAiLCJHVC1JODE2ME9LTFRQQSIsIkdULUk4MTYwWldMVFRUIiwiR1QtSTgyNTgiLCJHVC1JODI2MkQiLCJHVC1JODI2OCIiR1QtSTg1MDUiLCJHVC1JODUzMEJBQUJUVSIsIkdULUk4NTMwQkFMQ0hPIiwiR1QtSTg1MzBCQUxUVFQiLCJHVC1JODU1MEUiLCJHVC1JODc1MCIsIkdULUk5MDAiLCJHVC1JOTAwOEwiLCJHVC1JOTA4MEUiLCJHVC1JOTA4MkMiLCJHVC1JOTA4MkVXQUlOVSIsIkdULUk5MDgyaSIsIkdULUk5MTAwRyIsIkdULUk5MTAwTEtMQ0hUIiwiR1QtSTkxMDBNIiwiR1QtSTkxMDBQIiwiR1QtSTkxMDBUIiwiR1QtSTkxMDVVQU5EQlQiLCJHVC1JOTEyOEUiLCJHVC1JOTEyOEkiLCJHVC1JOTEyOFYiLCJHVC1JOTE1OFAiLCJHVC1JOTE1OFYiLCJHVC1JOTE2OEkiLCJHVC1JOTE5MCIsIkdULUk5MTkyIiwiR1QtSTkxOTJJIiwiR1QtSTkxOTVIIiwiR1QtSTkxOTVMIiwiR1QtSTkyNTAiLCJHVC1JOTMwMCIsIkdULUk5MzAwSSIsIkdULUk5MzAxSSIsIkdULUk5MzAzSSIsIkdULUk5MzA1TiIsIkdULUk5MzA4SSIsIkdULUk5NTAwIiwiR1QtSTk1MDVHIiwiR1QtSTk1MDVYIiwiR1QtSTk1MDdWIiwiR1QtSTk2MDAiLCJHVC1NNTY1MCIsIkdULU41MDAwUyIsIkdULU41MTAwIiwiR1QtTjUxMDUiLCJHVC1ONTExMCIsIkdULU41MTIwIiwiR1QtTjcwMDBCIiwiR1QtTjcwMDUiLCJHVC1ONzEwMCIsIkdULU43MTAwVCIsIkdULU43MTAyIiwiR1QtTjcxMDUiLCJHVC1ONzEwNVQiLCJHVC1ONzEwOCIsIkdULU43MTA4RCIsIkdULU44MDAwIiwiR1QtTjgwMDUiLCJHVC1OODAxMCIsIkdULU44MDIwIiwiR1QtTjkwMDAiLCJHVC1OOTUwNSIsIkdULVAxMDAwQ1dBWFNBIiwiR1QtUDEwMDBNIiwiR1QtUDEwMDBUIiwiR1QtUDEwMTAiLCJHVC1QMzEwMEIiLCJHVC1QMzEwNSIsIkdULVAzMTA4IiwiR1QtUDMxMTAiLCJHVC1QNTEwMCIsIkdULVA1MTEwIiwiR1QtUDUyMDAiLCJHVC1QNTIxMCIsIkdULVA1MjEwWEQxIiwiR1QtUDUyMjAiLCJHVC1QNjIwMCIsIkdULVA2MjAwTCIsIkdULVA2MjAxIiwiR1QtUDYyMTAiLCJHVC1QNjIxMSIsIkdULVA2ODAwIiwiR1QtUDcxMDAiLCJHVC1QNzMwMCIsIkdULVA3MzAwQiIsIkdULVA3MzEwIiwiR1QtUDczMjAiLCJHVC1QNzUwMEQiLCJHVC1QNzUwME0iLCJTQU1TVU5HIiwiTE1ZNCIsIkxNWTQ3ViIsIk1NQjI5SyIsIk1NQjI5TSIsIkxSWDIyQyIsIkxSWDIyRyIsIk5NRjIiLCJOTUYyNlgiLCJOTUYyNlg7IiwiTlJEOTBNIiwiTlJEOTBNOyIsIlNQSC1MNzIwIiwiSU1MNzRLIiwiSU1NNzZEIiwiSkRRMzkiLCJKU1MxNUoiLCJKWk81NEsiLCJLT1Q0IiwiS09UNDlIIiwiS09UNFNNLVQzMTAiLCJLVFU4NFAiLCJTTS1BNTAwRiIsIlNNLUE1MDBGVSIsIlNNLUE1MDBIIiwiU00tRzUzMkYiLCJTTS1HOTAwRiIsIlNNLUc5MjBGIiwiU00tRzkzMEYiLCJTTS1HOTM1IiwiU00tRzk1MEYiLCJTTS1KMzIwRiIsIlNNLUozMjBGTiIsIlNNLUozMjBIIiwiU00tSjMyME0iLCJTTS1KNTEwRk4iLCJTTS1KNzAxRiIsIlNNLU45MjBTIiwiU00tVDExMSIsIlNNLVQyMzAiLCJTTS1UMjMxIiwiU00tVDIzNSIsIlNNLVQyODAiLCJTTS1UMzExIiwiU00tVDMxNSIsIlNNLVQ1MjUiLCJTTS1UNTMxIiwiU00tVDUzNSIsIlNNLVQ1NTUiLCJTTS1UNTYxIiwiU00tVDcwNSIsIlNNLVQ4MDUiLCJTTS1UODIwIikNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZ3R0PXJhbmRvbS5jaG9pY2UoeHh4eHgpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGd0dHQ9cmFuZG9tLmNob2ljZSh4eHh4eCkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYW5kcm9pZF92ZXJzaW9uPXN0cihyYW5kb20ucmFuZHJhbmdlKDYsMTMpKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1YV9zdHJpbmcgPSBmJ0RhdmlrLzIuMS4wIChsaW5leDsgVTsgQW5kcm9pZCB7c3RyKGFuZHJvaWRfdmVyc2lvbil9LjAuMDsge3N0cihndHQpfSBCdWlsZC97c3RyKGd0dHQpfSBbRkJBTi9GQjRBO0ZCQVYve3N0cihhcHBsaWNhdGlvbl92ZXJzaW9uKX07RkJCVi97c3RyKGFwcGxpY2F0aW9uX3ZlcnNpb25fY29kZSl9O0ZCRE0vJysne2RlbnNpdHk9Mi4wLHdpZHRoPTcyMCxoZWlnaHQ9MTI4MH07JytmJ0ZCTEMvZXNfQ1U7RkJSVi97c3RyKGFwcGxpY2F0aW9uX3ZlcnNpb25fY29kZSl9O0ZCQ1IvTW92aXN0YXI7RkJNRi9zYW1zdW5nO0ZCQkQvc2Ftc3VuZztGQlBOL3tzdHIoZmJzKX07RkJEVi97c3RyKGd0dCl9O0ZCU1YvNy4wO0ZCT1AvMTtGQkNBL2FybWVhYmktdjdhOmFybWVhYmk7XScNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGV2aWNlX2lkID0gc3RyKHV1aWQudXVpZDQoKSkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWRpZCA9IHN0cih1dWlkLnV1aWQ0KCkpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEgPSB7ImFkaWQiOiAiOWUwZjMwMDItNDNmYy00MzU4LTg5ZjEtNTYyMmI0MDNkNTAyIiwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnZW1haWwnOmlkcywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAncGFzc3dvcmQnOnBhcywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnY3BsJzondHJ1ZScsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2NyZWRlbnRpYWxzX3R5cGUnOidkZXZpY2VfYmFzZWRfbG9naW5fcGFzc3dvcmQnLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJzb3VyY2UiOiJkZXZpY2VfYmFzZWRfbG9naW4iLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdlcnJvcl9kZXRhaWxfdHlwZSc6J2J1dHRvbl93aXRoX2Rpc2FibGVkJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnc291cmNlJzonbG9naW4nLCdmb3JtYXQnOidqc29uJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnZ2VuZXJhdGVfc2Vzc2lvbl9jb29raWVzJzonMScsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2dlbmVyYXRlX2FuYWx5dGljc19jbGFpbSc6JzEnLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdnZW5lcmF0ZV9tYWNoaW5lX2lkJzonMScsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImxvY2FsZSI6ImVzX0NVIiwiY2xpZW50X2NvdW50cnlfY29kZSI6IkNVIiwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnZGV2aWNlJzpndHQsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImRldmljZV9pZCI6IjZlMTg4NjFlLWQ1NzgtNGNmYi04NzI4LTUyOGYxZTRiOTBlNyIsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm1ldGhvZCI6ImF1dGgubG9naW4iLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJmYl9hcGlfcmVxX2ZyaWVuZGx5X25hbWUiOiAiYXV0aGVudGljYXRlIiwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiZmJfYXBpX2NhbGxlcl9jbGFzcyI6ICJjb20uZmFjZWJvb2suYWNjb3VudC5sb2dpbi5wcm90b2NvbC5GYjRhQXV0aEhhbmRsZXIifQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWFkID0gew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdjb250ZW50LXR5cGUnOidhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICd4LWZiLXNpbS1obmknOnN0cihyYW5kb20ucmFuZGludCgyZTQsNGU0KSksDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3gtZmItY29ubmVjdGlvbi10eXBlJzondW5rbm93bicsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ0F1dGhvcml6YXRpb24nOidPQXV0aCAzNTA2ODU1MzE3Mjh8NjJmOGNlOWY3NGIxMmY4NGMxMjNjYzIzNDM3YTRhMzInLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdVc2VyLUFnZW50JzogJ0RhbHZpay8yLjEuMCBMaW51eDsgVTsgQW5kcm9pZCA2LjAuMDsgR1QtSTkzMDBJIEJ1aWxkL0tUVTg0UCkgW0ZCQU4vRkI0QTtGQkFWLzU0MC4wLjAuODQuNjI2O0ZCQlYvMTY5NzE3MjUwO0ZCRE0ve2RlbnNpdHk9NC4wLHdpZHRoPTE1MzIsaGVpZ2h0PTI1NjB9O0ZCTEMvZW5fVVM7RkJDUi9HcmFtZWVucGhvbmU7RkJNRi9zYW1zdW5nO0ZCQkQvc2Ftc3VuZztGQlBOL2NvbS5mYWNlYm9vay5rYXRhbmE7RkJEVi9HVC1JOTMwMEk7RkJTVi82LjAuMDtGQkNBL2FybWVhYmktdjdhOmFybWVhYmk7XScsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3gtZmItbmV0LWhuaSc6c3RyKHJhbmRvbS5yYW5kaW50KDJlNCw0ZTQpKSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAneC1mYi1jb25uZWN0aW9uLWJhbmR3aWR0aCc6c3RyKHJhbmRvbS5yYW5kaW50KDJlNywzZTcpKSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAneC1mYi1jb25uZWN0aW9uLXF1YWxpdHknOidFWENFTExFTlQnLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICd4LWZiLWZyaWVuZGx5LW5hbWUnOidhdXRoZW50aWNhdGUnLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdhY2NlcHQtZW5jb2RpbmcnOidnemlwLCBkZWZsYXRlJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAneC1mYi1odHRwLWVuZ2luZSc6ICAgICAnTGlnZXInfQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cmwgPSAnaHR0cHM6Ly9iLWdyYXBoLmZhY2Vib29rLmNvbS9hdXRoL2xvZ2luP2luY2x1ZGVfaGVhZGVycz1mYWxzZSZkZWNvZGVfYm9keV9qc29uPWZhbHNlJnN0cmVhbWFibGVfanNvbl9yZXNwb25zZT10cnVlJw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwbyA9IHJlcXVlc3RzLnBvc3QodXJsLGRhdGE9ZGF0YSxoZWFkZXJzPWhlYWQsYWxsb3dfcmVkaXJlY3RzPUZhbHNlKS50ZXh0DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHEgPSBqc29uLmxvYWRzKHBvKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAnc2Vzc2lvbl9rZXknIGluIHE6DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQoZidcclxyXDAzM1sxOzMybSBbU09IQUlMLU9LXSAnK2lkcysnIHwgJytwYXMrJ1wwMzNbMTs5N20nKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wZW4oZicvc2RjYXJkL1NPSEFJTC1PSy50eHQnLCdhJykud3JpdGUoaWRzKyd8JytwYXMrJ1xuJykNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAjY2VrX2FwayhzZXNzaW9uLGNva2kpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2tzLmFwcGVuZChpZHMpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxpZiAnd3d3LmZhY2Vib29rLmNvbScgaW4gcVsnZXJyb3InXVsnbWVzc2FnZSddOg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICd5JyBpbiBwY3A6DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmludChmJ1xyXHJceDFiWzM4OzU7MTI2bSBbU09IQUlMLUNQXSAnK2lkcysnIHwgJytwYXMrJ1wwMzNbMTs5N20nKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3BlbihmJy9zZGNhcmQvU09IQUlMLUNQLnR4dCcsICdhJykud3JpdGUoaWRzKyd8JytwYXMrJ1xuJykNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNwcy5hcHBlbmQoaWRzKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlOg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3BlbihmJy9zZGNhcmQvU09IQUlMLUNQLnR4dCcsJ2EnKS53cml0ZShpZHMrJ3wnK3BhcysnXG4nKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZToNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZQ0KICAgICAgICAgICAgICAgICAgICAgICAgbG9vcCs9MQ0KICAgICAgICAgICAgICAgIGV4Y2VwdCByZXF1ZXN0cy5leGNlcHRpb25zLkNvbm5lY3Rpb25FcnJvcjoNCiAgICAgICAgICAgICAgICAgICAgICAgIHRpbWUuc2xlZXAoMTApDQogICAgICAgICAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOg0KICAgICAgICAgICAgICAgICAgICAgICAgcGFzcw0KCQkNCg0KDQoNClNPSEFJTCgpDQo='))
